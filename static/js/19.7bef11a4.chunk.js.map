{"version":3,"sources":["components/auth/RecoverPassword.tsx","components/services/Firebase.tsx","components/subComponents/Html.tsx"],"names":["Recover","useState","email","setEmail","error","setError","config","require","className","title","name","to","onSubmit","e","preventDefault","btn","document","querySelector","setAttribute","Firebase","auth","sendPasswordResetEmail","then","catch","removeAttribute","message","htmlFor","type","id","required","onChange","target","value","onFocus","label","pxUp","l","style","top","fontSize","handleFocus","onBlur","input","pxDown","i","handleBlur","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","Html","props"],"mappings":"yKA+FeA,UAzFf,WAAmB,MAESC,mBAAS,IAFlB,mBAEVC,EAFU,KAEHC,EAFG,OAGSF,mBAAS,IAHlB,mBAGVG,EAHU,KAGHC,EAHG,KAoDXC,EAASC,EAAQ,IACvB,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,IAAD,CAAMC,MAAK,UAAKH,EAAOI,KAAZ,yBACX,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,gCAGF,uBAAMC,SA9BY,SAACC,GACrBA,EAAEC,iBACF,IAAIC,EAAMC,SAASC,cAAc,QACjCF,EAAIG,aAAa,WAAY,IAEf,KAAVhB,EACFiB,IAASC,OACNC,uBAAuBnB,GACvBoB,MAAK,WACJjB,EACE,oFAGHkB,OAAM,SAAUnB,GACfW,EAAIS,gBAAgB,YACpBnB,EAASD,EAAMqB,aAGnBpB,EAAS,gCACTU,EAAIS,gBAAgB,cAWpB,UACE,mBAAGhB,UAAU,eAAb,uKAKA,sBAAKA,UAAU,sBAAf,UACE,uBAAOkB,QAAQ,QAAQlB,UAAU,aAAjC,2BAGA,uBACEmB,KAAK,QACLC,GAAG,QACHpB,UAAU,aACVqB,UAAQ,EACRC,SAAU,SAACjB,GAAD,OAAOV,EAASU,EAAEkB,OAAOC,QACnCC,QAAS,kBAtEC,SAACC,EAAeC,GAClC,IAAIC,EAAIpB,SAASC,cAAT,UAAuCiB,IAE3CE,IACFA,EAAEC,MAAMC,IAAR,UAAiBH,GACjBC,EAAEC,MAAME,SAAW,QAiEEC,CAAY,cAAe,QAC1CC,OAAQ,kBA9DC,SAACC,EAAeR,EAAeS,GAChD,IAAIP,EAAIpB,SAASC,cAAT,UAAuCiB,IAC3CU,EAAI5B,SAASC,cAAT,UAA0ByB,IAClC,GAAIN,EAAG,CACL,GAAgB,KAAZQ,EAAEZ,MAIJ,OAHAI,EAAEC,MAAMC,IAAR,UAAiBK,GACjBP,EAAEC,MAAME,SAAW,UAwDDM,CAAW,cAAe,cAAe,cAG3D,mBAAGrC,UAAU,eAAb,SAA6BJ,IAC7B,wBAAQwB,GAAG,MAAX,qBAGF,cAAC,IAAD,CAAMjB,GAAG,WAAT,0B,6FC1FN,8CAeMmC,GAfN,kBAeaC,IAASC,cAVC,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,+CAKIC,EAAKR,IAASS,YAEZV,O,gCClBf,mBAiBeW,IAff,SAAcC,GACZ,OACE,eAAC,IAAD,WACE,gCAAQA,EAAMjD,QACd","file":"static/js/19.7bef11a4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Firebase from \"../services/Firebase\";\r\nimport Html from \"../subComponents/Html\";\r\n\r\nfunction Recover() {\r\n  //states\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // ui functions\r\n  const handleFocus = (label: string, pxUp: string): void => {\r\n    let l = document.querySelector<HTMLElement>(`${label}`)!;\r\n\r\n    if (l) {\r\n      l.style.top = `${pxUp}`;\r\n      l.style.fontSize = \"1rem\";\r\n    }\r\n  };\r\n\r\n  const handleBlur = (input: string, label: string, pxDown: string): void => {\r\n    let l = document.querySelector<HTMLElement>(`${label}`)!;\r\n    let i = document.querySelector(`${input}`) as HTMLInputElement;\r\n    if (l) {\r\n      if (i.value === \"\") {\r\n        l.style.top = `${pxDown}`;\r\n        l.style.fontSize = \"1.1rem\";\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  // send password recovery\r\n\r\n  const handleRecover = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    let btn = document.querySelector(\"#btn\") as HTMLButtonElement;\r\n    btn.setAttribute(\"disabled\", \"\");\r\n\r\n    if (email !== \"\") {\r\n      Firebase.auth()\r\n        .sendPasswordResetEmail(email)\r\n        .then(function () {\r\n          setError(\r\n            \"You recieved an email, please follow the instructions to reset your password.\"\r\n          );\r\n        })\r\n        .catch(function (error) {\r\n          btn.removeAttribute(\"disabled\");\r\n          setError(error.message);\r\n        });\r\n    } else {\r\n      setError(\"That input can not be blank.\");\r\n      btn.removeAttribute(\"disabled\");\r\n    }\r\n  };\r\n  const config = require(\"../../config.json\")\r\n  return (\r\n    <div className=\"recover\">\r\n      <Html title={`${config.name} | Recover password`}></Html>\r\n      <h1>\r\n        <Link to=\"/\">Forgot password?</Link>\r\n      </h1>\r\n\r\n      <form onSubmit={handleRecover}>\r\n        <p className=\"instructions\">\r\n          Please enter your account email and click the \"Send\" button, you\r\n          should recieve an email from us, follow the instructions to reset your\r\n          account password.\r\n        </p>\r\n        <div className=\"emailWrapperRecover\">\r\n          <label htmlFor=\"email\" className=\"emailLabel\">\r\n            Account email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"emailInput\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            onFocus={() => handleFocus(\".emailLabel\", \"5px\")}\r\n            onBlur={() => handleBlur(\".emailInput\", \".emailLabel\", \"30px\")}\r\n          />\r\n        </div>\r\n        <p className=\"recoverError\">{error}</p>\r\n        <button id=\"btn\">Send</button>\r\n      </form>\r\n\r\n      <Link to=\"/sign-in\">Sign In</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recover;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBPuJnN5gI3o_YZeVNlZwOky-7Y6LDGrTI\",\r\n  authDomain: \"justtype-preview.firebaseapp.com\",\r\n  projectId: \"justtype-preview\",\r\n  storageBucket: \"justtype-preview.appspot.com\",\r\n  messagingSenderId: \"648878251377\",\r\n  appId: \"1:648878251377:web:e42775dc14919b1475ead0\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\n\r\nexport default fire;\r\n","import Helmet from \"react-helmet\";\r\n\r\nfunction Html(props: any) {\r\n  return (\r\n    <Helmet>\r\n      <title>{props.title}</title>\r\n      <style>\r\n        {`\r\n                 body {\r\n                    background-color: #0b101b;       \r\n                  }\r\n                `}\r\n      </style>\r\n    </Helmet>\r\n  );\r\n}\r\n\r\nexport default Html;\r\n"],"sourceRoot":""}