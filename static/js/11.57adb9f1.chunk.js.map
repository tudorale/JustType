{"version":3,"sources":["components/AccountSettings.tsx","components/services/Firebase.tsx","components/subComponents/Html.tsx","components/Navs/LoggedNav.tsx","components/subComponents/NotLogged.tsx"],"names":["AccountSettings","useState","undefined","user","setUser","userData","setUserData","newUsername","setNewUsername","usernameStatus","setUsernameStatus","newEmail","setNewEmail","emailStatus","setEmailStatus","newPassowrd","setNewPassword","passwordStatus","setPasswordStatus","imageStatus","setImageStatus","description","setDescription","descriptionStatus","setDescriptionStatus","image","setImage","layoutStatus","setLayoutStatus","useEffect","Firebase","auth","onAuthStateChanged","usr","content","document","querySelector","style","display","db","collection","doc","uid","onSnapshot","includeMetadataChanges","result","data","contentNot","handleFocus","i","l","pxUp","inputHeight","f","input","label","height","top","fontSize","handleBlur","value","currentUser","usernames","title","className","path","name","displayName","keyboardLayout","email","metadata","creationTime","lastSignInTime","src","photoURL","type","onChange","e","file","target","files","onClick","size","startsWith","storageRef","storage","ref","allImages","child","put","then","getDownloadURL","url","imageURL","update","profileImage","updateProfile","listAll","res","items","length","delete","console","log","handleSetImage","htmlFor","id","maxLength","onFocus","marginTop","handleFocusDescription","onBlur","handleBlurDescription","marginBottom","spinner","catch","err","message","onSubmit","preventDefault","RegExpression","changedUsername","pro","test","get","forEach","push","username","includes","minLength","paddingRight","emailSpinner","updateEmail","error","passwordSpinner","updatePassword","window","location","href","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Html","props","LoggedNav","notifications","setNotifications","isMounted","history","useHistory","mobileStatus","handleSignOut","signOut","notStatus","mobileNav","effect","opacity","zIndex","to","wrapper","xmlns","width","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","map","x","sender","time","play","NotLogged"],"mappings":"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","file":"static/js/11.57adb9f1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../style/css/main.css\";\r\nimport Nav from \"./Navs/LoggedNav\";\r\nimport Firebase, { db } from \"./services/Firebase\";\r\nimport NotLogged from \"./subComponents/NotLogged\";\r\nimport HTML from \"./subComponents/Html\";\r\n\r\nfunction AccountSettings() {\r\n  const [user, setUser] = useState<any>(undefined);\r\n  const [userData, setUserData] = useState<any>(\"\");\r\n\r\n  const [newUsername, setNewUsername] = useState(\"\");\r\n  const [usernameStatus, setUsernameStatus] = useState(\"\");\r\n\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [emailStatus, setEmailStatus] = useState(\"\");\r\n\r\n  const [newPassowrd, setNewPassword] = useState(\"\");\r\n  const [passwordStatus, setPasswordStatus] = useState(\"\");\r\n\r\n  const [imageStatus, setImageStatus] = useState(\"\");\r\n\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionStatus, setDescriptionStatus] = useState(\"\");\r\n\r\n  const [image, setImage] = useState<any>(\"\");\r\n  const [layoutStatus, setLayoutStatus] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    Firebase.auth().onAuthStateChanged((usr) => {\r\n      if (usr) {\r\n        setUser(usr);\r\n        let content = document.querySelector(\r\n          \".accountSettingsWrapper\"\r\n        ) as HTMLDivElement;\r\n        let spinner = document.querySelector(\r\n          \".networkSpinner\"\r\n        ) as HTMLDivElement;\r\n        spinner.style.display = \"none\";\r\n        content.style.display = \"block\";\r\n\r\n        db.collection(\"users\")\r\n          .doc(usr.uid)\r\n          .onSnapshot(\r\n            {\r\n              includeMetadataChanges: true,\r\n            },\r\n            (result) => {\r\n              setUserData(result.data());\r\n            }\r\n          );\r\n      } else {\r\n        let contentNot = document.querySelector(\r\n          \".notLoggedIn\"\r\n        ) as HTMLDivElement;\r\n        let spinner = document.querySelector(\r\n          \".networkSpinner\"\r\n        ) as HTMLDivElement;\r\n        spinner.style.display = \"none\";\r\n        contentNot.style.display = \"block\";\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // ui functions\r\n\r\n  const handleFocus = (\r\n    i: string,\r\n    l: string,\r\n    pxUp: string,\r\n    inputHeight: string,\r\n    f: string\r\n  ) => {\r\n    let input = document.querySelector(i) as HTMLInputElement;\r\n    let label = document.querySelector(l) as HTMLLabelElement;\r\n\r\n    input.style.height = `${inputHeight}px`;\r\n    label.style.top = `${pxUp}px`;\r\n    label.style.fontSize = `${f}rem`;\r\n  };\r\n\r\n  const handleBlur = (i: string, l: string, value: any) => {\r\n    let input = document.querySelector(i) as HTMLInputElement;\r\n    let label = document.querySelector(l) as HTMLLabelElement;\r\n\r\n    if (value === \"\") {\r\n      input.style.height = `40px`;\r\n      label.style.top = `30px`;\r\n      label.style.fontSize = `1rem`;\r\n    }\r\n  };\r\n\r\n  const handleFocusDescription = (\r\n    i: string,\r\n    l: string,\r\n    pxUp: string,\r\n    f: string\r\n  ) => {\r\n    let label = document.querySelector(l) as HTMLLabelElement;\r\n\r\n    label.style.marginTop = `${pxUp}px`;\r\n    label.style.fontSize = `${f}rem`;\r\n  };\r\n\r\n  const handleBlurDescription = (l: string, pxUp: string, value: any) => {\r\n    let label = document.querySelector(l) as HTMLLabelElement;\r\n\r\n    if (value === \"\") {\r\n      label.style.marginTop = `${pxUp}`;\r\n      label.style.fontSize = `1rem`;\r\n    }\r\n  };\r\n\r\n  // variable just for account settings\r\n  const currentUser = Firebase.auth().currentUser;\r\n\r\n  // all usernames from the databse\r\n  let usernames: any[] = [];\r\n\r\n  const handleUsername = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    // one time only to change username for non-pro members\r\n    let spinner = document.querySelector(\".loadingSpinner\") as HTMLDivElement;\r\n    let RegExpression = /^[a-zA-Z0-9 _\\s]*$/;\r\n    if (!userData.changedUsername) {\r\n      spinner.style.display = \"block\";\r\n\r\n      if (RegExpression.test(newUsername)) {\r\n        if (newUsername.length >= 4 && newUsername.length <= 20) {\r\n          db.collection(\"users\")\r\n            .get()\r\n            .then((user) => {\r\n              user.forEach((data) => {\r\n                usernames.push(data.data().username);\r\n              });\r\n            })\r\n            .then(() => {\r\n              if (usernames.includes(newUsername)) {\r\n                setUsernameStatus(\"This username is already in use.\");\r\n                spinner.style.display = \"none\";\r\n              } else {\r\n                currentUser\r\n                  ?.updateProfile({\r\n                    displayName: newUsername,\r\n                  })\r\n                  .then(() => {\r\n                    spinner.style.display = \"none\";\r\n                    setUsernameStatus(\"Your username has been changed.\");\r\n                  })\r\n                  .then(() => {\r\n                    db.collection(\"users\").doc(currentUser?.uid).update({\r\n                      changedUsername: true,\r\n                    });\r\n                  })\r\n                  .catch((err) => {\r\n                    spinner.style.display = \"none\";\r\n                    setUsernameStatus(err.message);\r\n                  });\r\n\r\n                db.collection(\"users\").doc(user.uid).update({\r\n                  username: newUsername,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          setUsernameStatus(\r\n            \"Your username must be more than 4 characters and less than 20 characters.\"\r\n          );\r\n        }\r\n      } else {\r\n        setUsernameStatus(\r\n          \"Invalid username, use only letters, numbers and underscores\"\r\n        );\r\n      }\r\n    } else {\r\n      if (!userData.pro) {\r\n        setUsernameStatus(\r\n          \"You can not change your username, you already did that.\"\r\n        );\r\n      }\r\n      if (userData.pro) {\r\n        if (RegExpression.test(newUsername)) {\r\n          if (newUsername.length >= 4 && newUsername.length <= 20) {\r\n            spinner.style.display = \"block\";\r\n\r\n            db.collection(\"users\")\r\n              .get()\r\n              .then((user) => {\r\n                user.forEach((data) => {\r\n                  usernames.push(data.data().username);\r\n                });\r\n              })\r\n              .then(() => {\r\n                if (usernames.includes(newUsername)) {\r\n                  setUsernameStatus(\"This username is already in use.\");\r\n                  spinner.style.display = \"none\";\r\n                } else {\r\n                  currentUser\r\n                    ?.updateProfile({\r\n                      displayName: newUsername,\r\n                    })\r\n                    .then(() => {\r\n                      spinner.style.display = \"none\";\r\n                      setUsernameStatus(\"Your username has been changed.\");\r\n                    })\r\n                    .catch((err) => {\r\n                      spinner.style.display = \"none\";\r\n                      setUsernameStatus(err.message);\r\n                    });\r\n                  db.collection(\"users\").doc(user.uid).update({\r\n                    username: newUsername,\r\n                  });\r\n                }\r\n              });\r\n          } else {\r\n            setUsernameStatus(\r\n              \"Your username must be more than 4 characters and less than 20 characters.\"\r\n            );\r\n          }\r\n        } else {\r\n          setUsernameStatus(\r\n            \"Invalid username, use only letters, numbers and underscores\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEmail = (e: React.FormEvent<HTMLFormElement>) => {\r\n    let emailSpinner = document.querySelector(\r\n      \".emailSpinner\"\r\n    ) as HTMLDivElement;\r\n    emailSpinner.style.display = \"block\";\r\n    e.preventDefault();\r\n    currentUser\r\n      ?.updateEmail(newEmail)\r\n      .then(() => {\r\n        emailSpinner.style.display = \"none\";\r\n        setEmailStatus(\"Your email has been changed.\");\r\n      })\r\n      .catch((error) => {\r\n        emailSpinner.style.display = \"none\";\r\n        setEmailStatus(error.message);\r\n      });\r\n  };\r\n\r\n  const handlePassword = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    let passwordSpinner = document.querySelector(\r\n      \".passwordSpinner\"\r\n    ) as HTMLDivElement;\r\n    passwordSpinner.style.display = \"block\";\r\n\r\n    currentUser\r\n      ?.updatePassword(newPassowrd)\r\n      .then(() => {\r\n        passwordSpinner.style.display = \"none\";\r\n        setPasswordStatus(\"Your password has been changed.\");\r\n      })\r\n      .catch((error) => {\r\n        passwordSpinner.style.display = \"none\";\r\n        setPasswordStatus(error.message);\r\n      });\r\n  };\r\n\r\n  const deleteAccount = () => {\r\n    window.location.href = \"/delete-account\";\r\n  };\r\n\r\n  const handleImage = (e: any) => {\r\n    let file = e.target.files[0];\r\n    setImage(file);\r\n    setImageStatus(\"\");\r\n  };\r\n\r\n  const handleSetImage = () => {\r\n    if (image !== \"\") {\r\n      setImageStatus(\"Checking your image...\");\r\n      if (image.size <= 5 * 1024 * 1024) {\r\n        if (!image.type.startsWith(\"image/\")) {\r\n          setImageStatus(\r\n            \"That file is not a image for sure, please upload an image.\"\r\n          );\r\n        } else {\r\n          let storageRef = Firebase.storage().ref(\r\n            \"users/\" + `${currentUser?.uid}/` + `${image.name}`\r\n          );\r\n          let allImages = Firebase.storage()\r\n            .ref()\r\n            .child(`users/` + currentUser?.uid);\r\n\r\n          storageRef.put(image).then(() => {\r\n            setImageStatus(\"Uploading...\");\r\n            storageRef.getDownloadURL().then((url) => {\r\n              let imageURL = url;\r\n              db.collection(\"users\").doc(currentUser?.uid).update({\r\n                profileImage: url,\r\n              });\r\n              currentUser\r\n                ?.updateProfile({\r\n                  photoURL: imageURL,\r\n                })\r\n                .then(() => {\r\n                  setImage(\"\");\r\n                  setImageStatus(\r\n                    \"Your profile image was changed. It might take a few seconds to update.\"\r\n                  );\r\n                });\r\n            });\r\n\r\n            allImages.listAll().then((res) => {\r\n              let files = res.items;\r\n              for (let i = 0; i < files.length; i++) {\r\n                if (files[i].name !== image.name) {\r\n                  files[i].delete().then(() => {\r\n                    console.log(\"done\");\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      } else {\r\n        setImageStatus(\"The image must be less than 5MB\");\r\n      }\r\n    } else {\r\n      setImageStatus(\"Select an image\");\r\n    }\r\n  };\r\n\r\n  const handleDescription = () => {\r\n    if (description !== \"\") {\r\n      let spinner = document.querySelector(\r\n        \".descriptionSpinner\"\r\n      ) as HTMLDivElement;\r\n      spinner.style.display = \"block\";\r\n      if (description.length <= 250) {\r\n        db.collection(\"users\")\r\n          .doc(currentUser?.uid)\r\n          .update({\r\n            description: description,\r\n          })\r\n          .then(() => {\r\n            spinner.style.display = \"none\";\r\n            setDescriptionStatus(\"Your description has been changed\");\r\n          })\r\n          .catch((err) => {\r\n            spinner.style.display = \"none\";\r\n            setDescriptionStatus(err.message);\r\n          });\r\n      } else {\r\n        setDescriptionStatus(\r\n          \"Your description must be less than 250 characters\"\r\n        );\r\n      }\r\n    } else {\r\n      setDescriptionStatus(\"Your description can not be blank.\");\r\n    }\r\n  };\r\n\r\n  const keyboardLayout = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setLayoutStatus(\"Setting your layout...\");\r\n\r\n    db.collection(\"users\")\r\n      .doc(currentUser?.uid)\r\n      .update({\r\n        keyboardLayout: e.target.value,\r\n      })\r\n      .then(() => {\r\n        setLayoutStatus(\"Done\");\r\n      })\r\n      .catch((err) => {\r\n        setLayoutStatus(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HTML title=\"JustType - Account settings\" />\r\n\r\n      <div className=\"networkSpinner\"></div>\r\n\r\n      <div className=\"accountSettingsWrapper\">\r\n        <Nav path=\"/play\" name=\"Main\" />\r\n        <div className=\"subWrapper\">\r\n          <h1>Your account</h1>\r\n          <p>\r\n            Username: <span>{user ? user.displayName : \"Loading...\"}</span>\r\n          </p>\r\n          <p>\r\n            Keyboard layout:{\" \"}\r\n            <span>{userData ? userData.keyboardLayout : \"Loading...\"}</span>\r\n          </p>\r\n          <p>\r\n            Email: <span>{user ? user.email : \"Loading...\"}</span>\r\n          </p>\r\n          <p>\r\n            Created on:{\" \"}\r\n            <span>{user ? user.metadata.creationTime : \"Loading...\"}</span>\r\n          </p>\r\n          <p>\r\n            Last login:{\" \"}\r\n            <span>{user ? user.metadata.lastSignInTime : \"Loading...\"}</span>\r\n          </p>\r\n\r\n          <div className=\"profilePicture\">\r\n            <p>Profile Image</p>\r\n            <img\r\n              src={\r\n                user\r\n                  ? user?.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageSettings\"\r\n            />\r\n\r\n            <p>Change your profile image(best size: 150x150)</p>\r\n            <input type=\"file\" className=\"image\" onChange={handleImage} />\r\n            <p className=\"status\">{imageStatus}</p>\r\n            <button onClick={() => handleSetImage()}>Change image</button>\r\n          </div>\r\n\r\n          <div className=\"hisDescription\">\r\n            <p className=\"description\">\r\n              Description:{\" \"}\r\n              <span>{userData ? userData.description : \"Loading...\"}</span>\r\n            </p>\r\n          </div>\r\n          \r\n          <label htmlFor=\"description\" className=\"dLabel\">\r\n            Set description\r\n          </label>\r\n          <textarea\r\n            id=\"description\"\r\n            onChange={(e) => {\r\n              setDescription(e.target.value);\r\n              setDescriptionStatus(\"\");\r\n            }}\r\n            maxLength={250}\r\n            onFocus={() =>\r\n              handleFocusDescription(\"#description\", \".dLabel\", \"15\", \"0.9\")\r\n            }\r\n            onBlur={() => handleBlurDescription(\".dLabel\", \"20\", description)}\r\n          ></textarea>\r\n          \r\n          <p\r\n            style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n            className=\"status\"\r\n          >\r\n            {descriptionStatus}\r\n          </p>\r\n          <div className=\"descriptionSpinner\"></div>\r\n          <button className=\"usernameButton\" onClick={handleDescription}>\r\n            Change description\r\n          </button>\r\n\r\n          <p>Set your keyboard layout</p>\r\n          <select name=\"layouts\" onChange={keyboardLayout}>\r\n            <option>Not set</option>\r\n            <option value=\"QWERTY\">QWERTY</option>\r\n            <option value=\"Dvorak\">Dvorak</option>\r\n            <option value=\"AZERTY\">AZERTY</option>\r\n            <option value=\"Colemak\">Colemak</option>\r\n            <option value=\"Workman\">Workman</option>\r\n            <option value=\"Neo\">Neo</option>\r\n            <option value=\"BÉPO\">BÉPO</option>\r\n            <option value=\"Other layout\">Other layout</option>\r\n            <option value=\"Custom layout\">Custom layout</option>\r\n          </select>\r\n          <p\r\n            style={{ marginTop: \"15px\", marginBottom: \"10px\" }}\r\n            className=\"status\"\r\n          >\r\n            {layoutStatus}\r\n          </p>\r\n          <h1 className=\"asHeader\">Account settings</h1>\r\n          <div className=\"settingsContent\">\r\n            <div className=\"newUsername\">\r\n              <form onSubmit={handleUsername}>\r\n                <p>\r\n                  Change username{\" \"}\r\n                  {userData\r\n                    ? !userData.pro\r\n                      ? userData.changedUsername\r\n                        ? \"(Used)\"\r\n                        : \"(1 time)\"\r\n                      : \"(Unlimited)\"\r\n                    : \"\"}\r\n                </p>\r\n                <label htmlFor=\"username\" className=\"newUserL\">\r\n                  New username\r\n                </label>\r\n                <input\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    setNewUsername(e.target.value);\r\n                    setUsernameStatus(\"\");\r\n                  }}\r\n                  maxLength={20}\r\n                  minLength={4}\r\n                  onFocus={() =>\r\n                    handleFocus(\"#username\", \".newUserL\", \"23\", \"55\", \"0.9\")\r\n                  }\r\n                  onBlur={() =>\r\n                    handleBlur(\"#username\", \".newUserL\", newUsername)\r\n                  }\r\n                />\r\n                <p\r\n                  style={{ marginTop: \"10px\", paddingRight: \"20px\" }}\r\n                  className=\"status\"\r\n                >\r\n                  {usernameStatus}\r\n                </p>\r\n                <button>Change username</button>\r\n                <div className=\"loadingSpinner usernameSpinner\"></div>\r\n              </form>\r\n            </div>\r\n\r\n            <div className=\"newEmail\">\r\n              <form onSubmit={handleEmail}>\r\n                <p>Change email</p>\r\n                <label htmlFor=\"email\" className=\"newemailL\">\r\n                  Valid email\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  onChange={(e) => {\r\n                    setNewEmail(e.target.value);\r\n                    setEmailStatus(\"\");\r\n                  }}\r\n                  onFocus={() =>\r\n                    handleFocus(\"#email\", \".newemailL\", \"23\", \"55\", \"0.9\")\r\n                  }\r\n                  onBlur={() => handleBlur(\"#email\", \".newemailL\", newEmail)}\r\n                />\r\n                <p\r\n                  style={{ marginTop: \"10px\", paddingRight: \"20px\" }}\r\n                  className=\"status\"\r\n                >\r\n                  {emailStatus}\r\n                </p>\r\n                <button type=\"submit\">Change email</button>\r\n                <div className=\"loadingSpinner emailSpinner\"></div>\r\n              </form>\r\n            </div>\r\n\r\n            <div className=\"newPassword\">\r\n              <form onSubmit={handlePassword}>\r\n                <p>Change password</p>\r\n                <label htmlFor=\"password\" className=\"newpasswordL\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  onChange={(e) => {\r\n                    setNewPassword(e.target.value);\r\n                    setPasswordStatus(\"\");\r\n                  }}\r\n                  onFocus={() =>\r\n                    handleFocus(\"#password\", \".newpasswordL\", \"23\", \"55\", \"0.9\")\r\n                  }\r\n                  onBlur={() =>\r\n                    handleBlur(\"#password\", \".newpasswordL\", newPassowrd)\r\n                  }\r\n                />\r\n                <p\r\n                  style={{ marginTop: \"10px\", paddingRight: \"20px\" }}\r\n                  className=\"status\"\r\n                >\r\n                  {passwordStatus}\r\n                </p>\r\n                <button type=\"submit\">Change password</button>\r\n                <div className=\"loadingSpinner passwordSpinner\"></div>\r\n              </form>\r\n            </div>\r\n\r\n            <div className=\"deleteAccount\">\r\n              <p>\r\n                If you want to delete your JustType account press the button\r\n                below, by pressing that button you will be redirected to a\r\n                special page, from that page you will delete your account and\r\n                your data will be deleted from our databse, if you want to play\r\n                again and use our website you need to make a new account.\r\n              </p>\r\n              <p>\r\n                For every option from above you need to be 'fresh' logged in, if\r\n                you are not you will see an error and you have to log in again.\r\n              </p>\r\n              <button onClick={deleteAccount}>Delete account</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <NotLogged />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AccountSettings;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBPuJnN5gI3o_YZeVNlZwOky-7Y6LDGrTI\",\r\n  authDomain: \"justtype-preview.firebaseapp.com\",\r\n  projectId: \"justtype-preview\",\r\n  storageBucket: \"justtype-preview.appspot.com\",\r\n  messagingSenderId: \"648878251377\",\r\n  appId: \"1:648878251377:web:e42775dc14919b1475ead0\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\n\r\nexport default fire;\r\n","import Helmet from \"react-helmet\";\r\n\r\nfunction Html(props:any) {\r\n    return (\r\n        <Helmet>\r\n                <title>{props.title}</title>\r\n                <style>\r\n                {`\r\n                 body {\r\n                    background-color: #0e0b11;       \r\n                  }\r\n                `}\r\n                </style>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default Html\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Firebase, { db } from \"../services/Firebase\";\r\n\r\nfunction LoggedNav(props: any) {\r\n  // states\r\n  const [user, setUser] = useState<any>(\"\");\r\n  const [notifications, setNotifications] = useState<any>(\"\");\r\n\r\n  // ui stuff & checking if the user is logged in\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    Firebase.auth().onAuthStateChanged((usr: any) => {\r\n      if (usr) {\r\n        if (isMounted) {\r\n          setUser(usr);\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // fixing a bug\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .onSnapshot(\r\n          {\r\n            includeMetadataChanges: true,\r\n          },\r\n          (doc: any) => {\r\n            if (isMounted) {\r\n              setNotifications(doc.data().notifications);\r\n            }\r\n          }\r\n        );\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [user]);\r\n\r\n  const history = useHistory();\r\n\r\n  let mobileStatus = false;\r\n\r\n  const handleMobile = () => {\r\n    mobileStatus = !mobileStatus;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    if (mobileStatus) {\r\n      mobileNav.style.display = \"block\";\r\n      effect.style.opacity = \"0.5\";\r\n      effect.style.zIndex = \"999\";\r\n    } else {\r\n      mobileNav.style.display = \"none\";\r\n      effect.style.opacity = \"0\";\r\n      effect.style.zIndex = \"-2\";\r\n    }\r\n  };\r\n\r\n  const handleRemoveMobile = () => {\r\n    mobileStatus = false;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    mobileNav.style.display = \"none\";\r\n    effect.style.opacity = \"0\";\r\n    effect.style.zIndex = \"-2\";\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    Firebase.auth().signOut();\r\n    history.push(\"/sign-in\");\r\n  };\r\n\r\n  let notStatus = false;\r\n\r\n  const handleNotifications = () => {\r\n    notStatus = !notStatus;\r\n    let wrapper = document.querySelector(\r\n      \".notificationsWrapper\"\r\n    ) as HTMLDivElement;\r\n\r\n    if (notStatus) {\r\n      wrapper.style.zIndex = \"900\";\r\n      wrapper.style.opacity = \"1\";\r\n    } else {\r\n      wrapper.style.zIndex = \"-100\";\r\n      wrapper.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"effectLogged\" onClick={handleRemoveMobile}></div>\r\n\r\n      <div className=\"navbarLogged\">\r\n        <h1 className=\"logoNavLogged\">\r\n          <a href=\"/\">\r\n            JustTyp<span></span>\r\n          </a>\r\n        </h1>\r\n\r\n        <div className=\"navContent\">\r\n          <ul>\r\n            <Link to={props.path}>\r\n              <li>{props.name}</li>\r\n            </Link>\r\n          </ul>\r\n\r\n          {/* {props.play ? <a href={props.path}>{props.name}</a> */}\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n            />\r\n          </Link>\r\n\r\n          <div className=\"notifications\">\r\n            <div className=\"notificationBox\" onClick={handleNotifications}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"44\"\r\n                height=\"44\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"#6f32be\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6\" />\r\n                <path d=\"M9 17v1a3 3 0 0 0 6 0v-1\" />\r\n              </svg>\r\n            </div>\r\n\r\n            <div className=\"notificationsWrapper\">\r\n              <h1>Notifications</h1>\r\n              {notifications ? (\r\n                notifications.map((x: any) => {\r\n                  return (\r\n                    <div className=\"notification\" key={x.id}>\r\n                      <p className=\"sender\">\r\n                        <span>from</span> {x.sender}\r\n                      </p>\r\n                      <p className=\"notificationMessage\">\r\n                        {x.message} <span> - {x.time}</span>\r\n                      </p>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"notificationSpinner\"></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"navButtonLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n\r\n          <div className=\"hamburgerLogged\" onClick={handleMobile}>\r\n            <div className=\"lineLogged  line1\"> </div>\r\n            <div className=\"lineLogged line2\"> </div>\r\n            <div className=\"lineLogged  line3\"> </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mobileNavLogged\">\r\n        <h1 className=\"logoNavMobileLogged\">\r\n          <a href=\"/\">\r\n            JustTyp<span></span>\r\n          </a>\r\n        </h1>\r\n\r\n        <div className=\"navContentMobile\">\r\n          <ul>\r\n            {props.play ? (\r\n              <a href={props.path}>{props.name}</a>\r\n            ) : (\r\n              <Link to={props.path}>\r\n                <li>{props.name}</li>\r\n              </Link>\r\n            )}\r\n          </ul>\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n            />\r\n          </Link>\r\n\r\n          <button className=\"navButtonMobileLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoggedNav;\r\n","import React from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NotLogged = () => {\r\n  return (\r\n    <div className=\"notLoggedIn\">\r\n      <p>You must be logged in to view this page</p>\r\n      <Link to=\"/sign-in\">\r\n        <button>Sign In</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotLogged;\r\n"],"sourceRoot":""}