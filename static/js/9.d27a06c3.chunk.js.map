{"version":3,"sources":["components/subComponents/Card.tsx","components/Play.tsx","components/services/Firebase.tsx","components/subComponents/Html.tsx","components/Navs/LoggedNav.tsx","components/subComponents/NotLogged.tsx","images/pro.jpg","images/admin.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["Card","props","pro","title","src","Pro","className","tests","to","pathname","type","state","playingText","playzone","button","points","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","Play","useState","chat","setChat","message","setMessage","users","setUsers","timer","setTimer","undefined","texts","setTexts","userStatus","useContext","UserContext","user","setUser","userData","setUserData","playZoneStatus","PlayZoneContext","setPlayzone","setPlayingText","useEffect","spinner","document","querySelector","notLogged","Firebase","auth","onAuthStateChanged","usr","db","collection","doc","uid","get","then","result","data","spin","style","display","onSnapshot","includeMetadataChanges","wrapper","messages","date","Date","h","getHours","min","getMinutes","s","getSeconds","y","getFullYear","m","getMonth","getDate","filter","require","handleSentMessage","e","preventDefault","cooldown","length","userMessage","author","displayName","authorImage","photoURL","clean","time","id","typingHubID","role","firestoreData","push","update","setTimeout","input","value","focus","content","scrollTop","scrollHeight","orderBy","limit","forEach","prevState","catch","err","console","log","rank","config","history","useHistory","name","path","randomTests","transform","quotesTests","customTests","map","x","alt","Admin","Math","random","onSubmit","maxLength","onChange","target","placeholder","onClick","rx","username","profileImage","races","text","NotLogged","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Html","LoggedNav","notifications","setNotifications","isMounted","mobileStatus","handleSignOut","signOut","notStatus","mobileNav","effect","opacity","zIndex","sender","play","href","adminRequest","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/9.d27a06c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport Pro from \"../../images/pro.jpg\"\r\nimport {Link} from \"react-router-dom\"\r\nconst Card = (props:any) => {\r\n    const pro = props.pro;\r\n\r\n    return (\r\n        <>\r\n            <h1>{props.title} {pro ? <img src={Pro} /> : \"\"}</h1> \r\n            <p className=\"races\">{props.tests}</p>\r\n            <Link\r\n                to={{\r\n                pathname: `/speed/${props.type}`,\r\n                state: {\r\n                  playingText: \"\",\r\n                  playzone: false\r\n                },\r\n                }}\r\n            >\r\n                <button>{props.button}</button>\r\n            </Link>\r\n            <p className=\"points\">{props.points}</p>\r\n            <div className=\"icons\">\r\n                {\r\n                    props.type === \"random\" ? \r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#fff\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                        <circle cx=\"6.5\" cy=\"15.5\" r=\"3.5\" />\r\n                        <path d=\"M10 12v7\" />\r\n                        <circle cx=\"17.5\" cy=\"15.5\" r=\"3.5\" />\r\n                        <path d=\"M21 12v7\" />\r\n                    </svg>\r\n                    : null\r\n                }\r\n\r\n                {\r\n                    props.type === \"quotes\" ?\r\n                     <>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#fff\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                            <circle cx=\"6.5\" cy=\"15.5\" r=\"3.5\" />\r\n                            <path d=\"M10 12v7\" />\r\n                            <circle cx=\"17.5\" cy=\"15.5\" r=\"3.5\" />\r\n                            <path d=\"M21 12v7\" />\r\n                        </svg>\r\n\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className='icon' width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#fff\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                            <circle cx=\"18\" cy=\"16\" r=\"3\" />\r\n                            <line x1=\"21\" y1=\"13\" x2=\"21\" y2=\"19\" />\r\n                            <path d=\"M3 19v-10a4 4 0 0 1 4 -4a4 4 0 0 1 4 4v10\" />\r\n                            <line x1=\"3\" y1=\"13\" x2=\"11\" y2=\"13\" />\r\n                        </svg>\r\n                        <p className=\"normalPunctuation\">.,;</p>\r\n                     </>\r\n                    : null\r\n                }\r\n                \r\n                {\r\n                    props.type === \"custom\" ?\r\n                     <>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#fff\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                            <circle cx=\"6.5\" cy=\"15.5\" r=\"3.5\" />\r\n                            <path d=\"M10 12v7\" />\r\n                            <circle cx=\"17.5\" cy=\"15.5\" r=\"3.5\" />\r\n                            <path d=\"M21 12v7\" />\r\n                        </svg>\r\n\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className='icon' width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#fff\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                            <circle cx=\"18\" cy=\"16\" r=\"3\" />\r\n                            <line x1=\"21\" y1=\"13\" x2=\"21\" y2=\"19\" />\r\n                            <path d=\"M3 19v-10a4 4 0 0 1 4 -4a4 4 0 0 1 4 4v10\" />\r\n                            <line x1=\"3\" y1=\"13\" x2=\"11\" y2=\"13\" />\r\n                        </svg>\r\n                        <p className=\"normalPunctuation\">.,;</p>\r\n                        <p className=\"normalPunctuation\">\"\"</p>\r\n                        <p className=\"normalPunctuation\">$</p>\r\n                     </>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}   \r\n\r\nexport default Card;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../style/css/main.css\";\r\nimport Nav from \"./Navs/LoggedNav\";\r\nimport Pro from \"../images/pro.jpg\";\r\nimport Firebase, { db } from \"./services/Firebase\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Card from \"./subComponents/Card\";\r\nimport NotLogged from \"./subComponents/NotLogged\";\r\nimport HTML from \"./subComponents/Html\";\r\nimport UserContext from \"./services/UserContext\";\r\nimport PlayZoneContext from \"./services/PlayZoneContext\";\r\nimport {chatMessage} from \"./subComponents/Interfaces\";\r\nimport Admin from \"../images/admin.svg\";\r\nfunction Play() {\r\n  // states\r\n  const [chat, setChat] = useState<any>();\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const [users, setUsers] = useState<Array<Object>>([]);\r\n  const [timer, setTimer] = useState<number>(0);\r\n\r\n  const [texts, setTexts] = useState<Array<Object> | undefined >(undefined);\r\n\r\n  const userStatus = useContext(UserContext);\r\n  const { user, setUser, userData, setUserData } = userStatus;\r\n\r\n  const playZoneStatus = useContext(PlayZoneContext);\r\n  const {setPlayzone, setPlayingText} = playZoneStatus;\r\n\r\n  // checking if the user is logged in or not and adding values to states\r\n  useEffect(() => {\r\n    let spinner = document.querySelector(\r\n      \".slowNetworkSpinner\"\r\n    ) as HTMLDivElement;\r\n    let notLogged = document.querySelector(\".notLoggedIn\") as HTMLDivElement;\r\n\r\n    Firebase.auth().onAuthStateChanged((usr) => {\r\n      if (usr) {\r\n        setUser(usr);\r\n\r\n        // userdata\r\n        db.collection(\"users\")\r\n          .doc(usr.uid)\r\n          .get()\r\n          .then((result) => {\r\n            setUserData(result.data());\r\n\r\n            if (!userData?.pro) {\r\n              let spin = document.querySelector(\r\n                \".chatSpinner\"\r\n              ) as HTMLDivElement;\r\n              if (spin) {\r\n                spin.style.display = \"none\";\r\n              }\r\n            }\r\n          });\r\n\r\n        // texts\r\n        db.collection(\"playzone\")\r\n          .doc(\"texts\")\r\n          .onSnapshot(\r\n            {\r\n              includeMetadataChanges: true,\r\n            },\r\n            (doc: any) => {\r\n              setTexts(doc.data().wrapper); \r\n            }\r\n          );\r\n\r\n        spinner.style.display = \"none\";\r\n\r\n        // chat messages\r\n\r\n        db.collection(\"chat\")\r\n          .doc(\"messages\")\r\n          .onSnapshot(\r\n            {\r\n              includeMetadataChanges: true,\r\n            },\r\n            (doc: any) => {\r\n              setChat(doc.data().messages);\r\n            }\r\n          );\r\n      } else {\r\n        notLogged.style.display = \"block\";\r\n        spinner.style.display = \"none\";\r\n\r\n        let spin = document.querySelector(\".chatSpinner\") as HTMLDivElement;\r\n        if (spin) {\r\n          spin.style.display = \"none\";\r\n        }\r\n      }\r\n    });\r\n\r\n  }, []);\r\n\r\n  // date for the messages\r\n  let date = new Date();\r\n  let h = date.getHours();\r\n  let min = date.getMinutes();\r\n  let s = date.getSeconds();\r\n  let y = date.getFullYear();\r\n  let m = date.getMonth() + 1;\r\n  let d = date.getDate();\r\n\r\n  // send message function that checks if the message contain something and is less than 200 chars.\r\n\r\n  let Filter = require(\"bad-words\"),\r\n    filter = new Filter();\r\n\r\n  const handleSentMessage = (e: any) => {\r\n    e.preventDefault();\r\n    let cooldown = document.querySelector(\".cooldown\") as HTMLParagraphElement;\r\n\r\n    if (timer === 0) {\r\n      if (message !== \"\" && message.length <= 200) {\r\n        setTimer(3000); // 3 seconds cooldown\r\n        let userMessage: chatMessage = {\r\n          author: user?.displayName,\r\n          authorImage: user?.photoURL,\r\n          message: filter.clean(message),\r\n          time: `${h}:${min}:${s} ${d}/${m}/${y}`,\r\n          id: user?.uid,\r\n          typingHubID: userData?.typingHubID,\r\n          role: userData.role\r\n        };\r\n\r\n        db.collection(\"chat\")\r\n          .doc(\"messages\")\r\n          .get()\r\n          .then((doc: any) => {\r\n            let firestoreData = doc.data().messages;\r\n            firestoreData.push(userMessage);\r\n            db.collection(\"chat\")\r\n              .doc(\"messages\")\r\n              .update({\r\n                messages: firestoreData,\r\n              })\r\n              .then(() => {\r\n                setTimeout(() => {\r\n                  setTimer(0);\r\n                  cooldown.style.display = \"none\";\r\n                }, 3000);\r\n              });\r\n          });\r\n\r\n        let input = document.querySelector(\".messageInput\") as HTMLInputElement;\r\n        input.value = \"\";\r\n        input.focus();\r\n        setMessage(\"\");\r\n      }\r\n    } else {\r\n      cooldown.style.display = \"block\";\r\n    }\r\n  };\r\n\r\n  // scroll to bottom of the chat\r\n  useEffect(() => {\r\n    let content = document.querySelector(\".chatContent\") as HTMLDivElement;\r\n    if (content) {\r\n      content.scrollTop = content.scrollHeight;\r\n    }\r\n  }, [[], chat]);\r\n\r\n  // leaderboard data\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .orderBy(\"points\", \"desc\")\r\n      .limit(10)\r\n      .get()\r\n      .then((data: any) => {\r\n        data.forEach((usr: any) => {\r\n          setUsers((prevState: any) => [...prevState, usr.data()]);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"An error has occured: \", err.message);\r\n      });\r\n  }, []);\r\n\r\n  // check their points and their level to database\r\n  useEffect(() => {\r\n    Firebase.auth().onAuthStateChanged((usr) => {\r\n      if (usr && userData) {\r\n        if (userData.points >= 1200 && userData.points < 2200) {\r\n          db.collection(\"users\").doc(userData.id).update({\r\n            rank: \"Intermediate\",\r\n          });\r\n        } else if (userData.points >= 2200) {\r\n          db.collection(\"users\").doc(userData.id).update({\r\n            rank: \"Advanced\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, [userData]);\r\n\r\n  const config = require(\"../config.json\")\r\n\r\n  const history = useHistory();\r\n\r\n  const handleText = (text: string) => {\r\n    setPlayzone(true);\r\n    setPlayingText(text);\r\n    history.push(\"/speed/custom\")\r\n  }\r\n  return (\r\n    <>\r\n      <HTML title={`${config.name} | Main page`}/>\r\n\r\n      {userData && user ? (\r\n        <div className=\"extraWrapper\">\r\n          <Nav path=\"/account-settings\" name=\"Account Settings\" />\r\n          <div className=\"playWrapper\">\r\n            <div className=\"playContent\">\r\n              <p className=\"phoneIndicator\">\r\n                IMPORTANT: You are viewing this website on a phone/tablet, for a\r\n                better UI/UX please view this on desktop.\r\n              </p>\r\n              <div className=\"globalGrid\">\r\n                <div className=\"rowOne\">\r\n                  <div className=\"section-one\">\r\n                    <h1 className=\"roomsHeader\">\r\n                      Start typing{\" \"}\r\n                      <span className=\"yourPoints\">\r\n                        {\" \"}\r\n                        Your points:{\" \"}\r\n                        {!userData ? \"Loading...\" : userData.points}\r\n                      </span>\r\n                    </h1>\r\n\r\n                    <div className=\"card card1\">\r\n                      <Card\r\n                        title=\"RANDOM\"\r\n                        tests={\r\n                          userData ? `${userData.randomTests} Tests` : \"Loading\"\r\n                        }\r\n                        type=\"random\"\r\n                        button=\"Start typing\"\r\n                        points=\"20-40 points\"\r\n                      />\r\n\r\n                      <svg\r\n                        viewBox=\"0 0 200 200\"\r\n                        className=\"blob\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          fill=\"#5c17c4\"\r\n                          d=\"M23.6,-38.6C37.5,-32.8,60.6,-40.5,63.4,-36.4C66.2,-32.2,48.7,-16.1,47,-1C45.2,14.1,59.1,28.1,61.6,41.4C64.1,54.8,55.1,67.3,42.9,73.4C30.8,79.5,15.4,79.2,2.5,74.8C-10.3,70.4,-20.6,61.9,-32.1,55.4C-43.5,48.9,-56.1,44.3,-63.9,35.4C-71.7,26.4,-74.7,13.2,-69,3.3C-63.4,-6.7,-49.1,-13.4,-40.7,-21.3C-32.3,-29.1,-29.8,-38.2,-24,-48.7C-18.2,-59.1,-9.1,-71.1,-2.1,-67.4C4.8,-63.7,9.6,-44.4,23.6,-38.6Z\"\r\n                          transform=\"translate(100 100)\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n\r\n                    <div className=\"card card2\">\r\n                      <Card\r\n                        title=\"QUOTES\"\r\n                        tests={\r\n                          userData ? `${userData.quotesTests} Tests` : \"Loading\"\r\n                        }\r\n                        type=\"quotes\"\r\n                        button=\"Start typing\"\r\n                        points=\"50-80 points\"\r\n                      />\r\n\r\n                      <svg\r\n                        viewBox=\"0 0 200 200\"\r\n                        className=\"blob\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          fill=\"#5c17c4\"\r\n                          d=\"M23.6,-38.6C37.5,-32.8,60.6,-40.5,63.4,-36.4C66.2,-32.2,48.7,-16.1,47,-1C45.2,14.1,59.1,28.1,61.6,41.4C64.1,54.8,55.1,67.3,42.9,73.4C30.8,79.5,15.4,79.2,2.5,74.8C-10.3,70.4,-20.6,61.9,-32.1,55.4C-43.5,48.9,-56.1,44.3,-63.9,35.4C-71.7,26.4,-74.7,13.2,-69,3.3C-63.4,-6.7,-49.1,-13.4,-40.7,-21.3C-32.3,-29.1,-29.8,-38.2,-24,-48.7C-18.2,-59.1,-9.1,-71.1,-2.1,-67.4C4.8,-63.7,9.6,-44.4,23.6,-38.6Z\"\r\n                          transform=\"translate(100 100)\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n\r\n                    <div className=\"card card3\">\r\n                      <Card\r\n                        title=\"CUSTOM TEXT\"\r\n                        tests={\r\n                          userData ? `${userData.customTests} Tests` : \"Loading\"\r\n                        }\r\n                        type=\"custom\"\r\n                        button=\"Start typing\"\r\n                        points=\"20-40 points\"\r\n                      />\r\n\r\n                      <svg\r\n                        viewBox=\"0 0 200 200\"\r\n                        className=\"blob\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          fill=\"#5c17c4\"\r\n                          d=\"M23.6,-38.6C37.5,-32.8,60.6,-40.5,63.4,-36.4C66.2,-32.2,48.7,-16.1,47,-1C45.2,14.1,59.1,28.1,61.6,41.4C64.1,54.8,55.1,67.3,42.9,73.4C30.8,79.5,15.4,79.2,2.5,74.8C-10.3,70.4,-20.6,61.9,-32.1,55.4C-43.5,48.9,-56.1,44.3,-63.9,35.4C-71.7,26.4,-74.7,13.2,-69,3.3C-63.4,-6.7,-49.1,-13.4,-40.7,-21.3C-32.3,-29.1,-29.8,-38.2,-24,-48.7C-18.2,-59.1,-9.1,-71.1,-2.1,-67.4C4.8,-63.7,9.6,-44.4,23.6,-38.6Z\"\r\n                          transform=\"translate(100 100)\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"section-four\">\r\n                    <h1 className=\"chatHeader\">Global Chat</h1>\r\n                    <div className=\"globalChat\">\r\n                      {userData ? (\r\n                        !userData.pro ? (\r\n                          <>\r\n                            <div className=\"chatLocked\"></div>\r\n                            <div className=\"chatSpinner\"></div>\r\n                            <svg\r\n                              className=\"lockedIconChat\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              width=\"44\"\r\n                              height=\"44\"\r\n                              viewBox=\"0 0 24 24\"\r\n                              strokeWidth=\"1.5\"\r\n                              stroke=\"#6f32be\"\r\n                              fill=\"none\"\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                            >\r\n                              <path\r\n                                stroke=\"none\"\r\n                                d=\"M0 0h24v24H0z\"\r\n                                fill=\"none\"\r\n                              />\r\n                              <rect\r\n                                x=\"5\"\r\n                                y=\"11\"\r\n                                width=\"14\"\r\n                                height=\"10\"\r\n                                rx=\"2\"\r\n                              />\r\n                              <circle cx=\"12\" cy=\"16\" r=\"1\" />\r\n                              <path d=\"M8 11v-4a4 4 0 0 1 8 0v4\" />\r\n                            </svg>\r\n                            <p className=\"mustPro\">\r\n                              You must be a PRO user to chat!\r\n                            </p>\r\n                            <p className=\"buyProChat\">\r\n                              <Link to=\"/pro\">Buy Pro</Link>\r\n                            </p>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <div className=\"chatContent\">\r\n                              {chat\r\n                                ? chat.map((x: any) => {\r\n                                    return (\r\n                                      <div\r\n                                        className=\"messageWrapper\"\r\n                                        key={\r\n                                          Math.random() * 912391239132999.412\r\n                                        }\r\n                                      >\r\n                                        <Link to={`/user/${x.author}`}>\r\n                                          <img\r\n                                            src={x.authorImage}\r\n                                            className=\"profileImageChat\"\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </Link>\r\n                                        <Link to={`/user/${x.author}`}>\r\n                                          <p className=\"username\">\r\n                                            {x.author}{\" \"}\r\n                                            {\r\n                                              x.role === \"admin\" ? \r\n                                              <img\r\n                                              src={Admin}\r\n                                              className=\"adminImage\"\r\n                                              alt=\"\"\r\n                                              />\r\n                                              : \"\"\r\n                                            }\r\n                                            <img\r\n                                              src={Pro}\r\n                                              className=\"proImage\"\r\n                                              alt=\"\"\r\n                                            />{\" \"}\r\n                                            <span>{x.typingHubID}</span>\r\n                                          </p>\r\n                                        </Link>\r\n                                        <p className=\"message\">\r\n                                          {x.message}{\" \"}\r\n                                          <span>- sent at {x.time}</span>\r\n                                        </p>\r\n                                      </div>\r\n                                    );\r\n                                  })\r\n                                : null}\r\n                            </div>\r\n\r\n                            <form onSubmit={handleSentMessage}>\r\n                              <p className=\"length\">{message.length}/200</p>\r\n                              <p className=\"cooldown\">\r\n                                Wait, you can't spam like that\r\n                              </p>\r\n                              <input\r\n                                type=\"text\"\r\n                                maxLength={200}\r\n                                className=\"messageInput\"\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                placeholder=\"Type your message\"\r\n                              />\r\n\r\n                              <div className=\"send\" onClick={handleSentMessage}>\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"44\"\r\n                                  height=\"44\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  strokeWidth=\"1.5\"\r\n                                  stroke=\"#6f32be\"\r\n                                  fill=\"none\"\r\n                                  strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"\r\n                                >\r\n                                  <path\r\n                                    stroke=\"none\"\r\n                                    d=\"M0 0h24v24H0z\"\r\n                                    fill=\"none\"\r\n                                  />\r\n                                  <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\" />\r\n                                  <path d=\"M21 3l-6.5 18a0.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a0.55 .55 0 0 1 0 -1l18 -6.5\" />\r\n                                </svg>\r\n                              </div>\r\n                            </form>\r\n                          </>\r\n                        )\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"chatLocked\"></div>\r\n                          <div className=\"chatSpinner\"></div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"rowTwo\">\r\n                  <div className=\"section-five\">\r\n                    <h1 className=\"topHeader\">Top 10</h1>\r\n                    <div className=\"top10\">\r\n                      {users.length >= 1 ? (\r\n                        users.map((d: any) => {\r\n                          return (\r\n                            <div\r\n                              className=\"userWrapper\"\r\n                              key={Math.random() * 9999999999999999999}\r\n                            >\r\n                              <Link to={`/user/${d.username}`}>\r\n                                <img\r\n                                  className=\"lbImage\"\r\n                                  alt=\"\"\r\n                                  src={d.profileImage}\r\n                                />\r\n                              </Link>\r\n                              <Link to={`/user/${d.username}`}>\r\n                                <p className=\"lbUser\">\r\n                                  <span>{d.username}</span>{\" \"}\r\n                                  {\r\n                                    d.role === \"admin\" ? <img src={Admin} className=\"lbAdmin\" alt=\"\"/> : \"\"\r\n                                  }\r\n                                  {d.pro ? (\r\n                                    <img src={Pro} alt=\"\" className=\"lbPro\" />\r\n                                  ) : null}{\" \"}\r\n                                  <span className=\"lbId\">{d.typingHubID}</span>\r\n                                </p>\r\n                              </Link>\r\n                              <p className=\"lbPoints\">\r\n                                {d.points} Points, {d.rank} ({d.races} Tests)\r\n                              </p>\r\n                            </div>\r\n                          );\r\n                        })\r\n                      ) : (\r\n                        <div className=\"lbSpinner\"></div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"section-six\">\r\n                    <h1 className=\"playZoneHeader\">Play Zone</h1>\r\n                    <div className=\"playZone\">\r\n                      <p className=\"indication\">Test your speed on custom texts made by the comunity users or <Link to=\"/speed/custom\">add</Link> your own custom text.</p>\r\n                      <div className=\"textsWrapper\">\r\n                        \r\n                        {\r\n                          texts ? \r\n                            texts.length >= 1 ?\r\n                              texts.map((d: any) => {\r\n                                return (\r\n                                  <div className=\"text\" key={Math.random() * 999}>\r\n                                    <p className=\"author\">Created by <Link to={`/user/${d.author}`}>{d.author} {d.typingHubID}</Link></p>\r\n                                    <p className=\"playingText\">{d.text}</p>\r\n                                    <button onClick={() => handleText(d.text)}>Take test</button>  \r\n                                  </div>\r\n                                )\r\n                              })\r\n                            : <p className=\"textsInfo\">There are no texts so far, <Link to=\"/speed/custom\">add</Link> your own.</p>\r\n                          : <div className=\"playZoneSpinner\"></div>\r\n                        }\r\n                       \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <NotLogged />\r\n      )}\r\n\r\n      <div className=\"slowNetworkSpinner\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Play;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBPuJnN5gI3o_YZeVNlZwOky-7Y6LDGrTI\",\r\n  authDomain: \"justtype-preview.firebaseapp.com\",\r\n  projectId: \"justtype-preview\",\r\n  storageBucket: \"justtype-preview.appspot.com\",\r\n  messagingSenderId: \"648878251377\",\r\n  appId: \"1:648878251377:web:e42775dc14919b1475ead0\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\n\r\nexport default fire;\r\n","import Helmet from \"react-helmet\";\r\n\r\nfunction Html(props: any) {\r\n  return (\r\n    <Helmet>\r\n      <title>{props.title}</title>\r\n      <style>\r\n        {`\r\n                 body {\r\n                    background-color: #0b101b;       \r\n                  }\r\n                `}\r\n      </style>\r\n    </Helmet>\r\n  );\r\n}\r\n\r\nexport default Html;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Firebase, { db } from \"../services/Firebase\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport UserContext from \"../services/UserContext\";\r\n\r\nfunction LoggedNav(props: any) {\r\n  // states\r\n  const [notifications, setNotifications] = useState<any>(\"\");\r\n\r\n  const userStatus = useContext(UserContext);\r\n  const { user, setUser, setUserData} = userStatus;\r\n\r\n  // ui stuff & checking if the user is logged in\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    Firebase.auth().onAuthStateChanged((usr: any) => {\r\n      if (usr) {\r\n        if (isMounted) {\r\n          setUser(usr);\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // fixing a bug\r\n    if (user) {\r\n      db.collection(\"notifications\")\r\n        .doc(\"global\")\r\n        .onSnapshot(\r\n          {\r\n            includeMetadataChanges: true,\r\n          },\r\n          (doc: any) => {\r\n            if (isMounted) {\r\n              setNotifications(doc.data().wrapper);\r\n            }\r\n          }\r\n        );\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [user]);\r\n\r\n  const history = useHistory();\r\n\r\n  let mobileStatus = false;\r\n\r\n  const handleMobile = () => {\r\n    mobileStatus = !mobileStatus;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    if (mobileStatus) {\r\n      mobileNav.style.display = \"block\";\r\n      effect.style.opacity = \"0.5\";\r\n      effect.style.zIndex = \"999\";\r\n    } else {\r\n      mobileNav.style.display = \"none\";\r\n      effect.style.opacity = \"0\";\r\n      effect.style.zIndex = \"-2\";\r\n    }\r\n  };\r\n\r\n  const handleRemoveMobile = () => {\r\n    mobileStatus = false;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    mobileNav.style.display = \"none\";\r\n    effect.style.opacity = \"0\";\r\n    effect.style.zIndex = \"-2\";\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    Firebase.auth().signOut();\r\n    setUserData(null);\r\n    setUser(null)\r\n    history.push(\"/sign-in\");\r\n  };\r\n\r\n  let notStatus = false;\r\n\r\n  const handleNotifications = () => {\r\n    notStatus = !notStatus;\r\n    let wrapper = document.querySelector(\r\n      \".notificationsWrapper\"\r\n    ) as HTMLDivElement;\r\n\r\n    if (notStatus) {\r\n      wrapper.style.zIndex = \"900\";\r\n      wrapper.style.opacity = \"1\";\r\n    } else {\r\n      wrapper.style.zIndex = \"-100\";\r\n      wrapper.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"effectLogged\" onClick={handleRemoveMobile}></div>\r\n\r\n      <div className=\"navbarLogged\">\r\n        <h1 className=\"logoNavLogged\">\r\n          <HashLink to=\"/\">\r\n           TypingHu<span></span>\r\n          </HashLink>\r\n        </h1>\r\n\r\n        <div className=\"navContent\">\r\n          <ul>\r\n            <Link to={props.path}>\r\n              <li>{props.name}</li>\r\n            </Link>\r\n          </ul>\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n\r\n          <div className=\"notifications\">\r\n            <div className=\"notificationBox\" onClick={handleNotifications}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"44\"\r\n                height=\"44\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"#6f32be\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6\" />\r\n                <path d=\"M9 17v1a3 3 0 0 0 6 0v-1\" />\r\n              </svg>\r\n            </div>\r\n\r\n            <div className=\"notificationsWrapper\">\r\n              <h1>Notifications</h1>\r\n              {notifications ? \r\n                notifications.length >= 1 ? (\r\n                  notifications.map((x: any) => {\r\n                    return (\r\n                      <div className=\"notification\" key={x.id}>\r\n                        <p className=\"sender\">\r\n                          <span>from</span> {x.sender}\r\n                        </p>\r\n                        <p className=\"notificationMessage\">\r\n                          {x.message} <span> - {x.time}</span>\r\n                        </p>\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : <p className=\"zeroNotifications\">You have zero notifications!</p>\r\n              : (\r\n                <div className=\"notificationSpinner\"></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"navButtonLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n\r\n          <div className=\"hamburgerLogged\" onClick={handleMobile}>\r\n            <div className=\"lineLogged  line1\"> </div>\r\n            <div className=\"lineLogged line2\"> </div>\r\n            <div className=\"lineLogged  line3\"> </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mobileNavLogged\">\r\n        <h1 className=\"logoNavMobileLogged\">\r\n          <HashLink to=\"/\">\r\n           TypingHu<span></span>\r\n          </HashLink>\r\n        </h1>\r\n\r\n        <div className=\"navContentMobile\">\r\n          <ul>\r\n            {props.play ? (\r\n              <a href={props.path}>{props.name}</a>\r\n            ) : (\r\n              <Link to={props.path}>\r\n                <li>{props.name}</li>\r\n              </Link>\r\n            )}\r\n          </ul>\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n\r\n          <button className=\"navButtonMobileLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoggedNav;\r\n","import React from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NotLogged = (props: any) => {\r\n  return (\r\n    <div className=\"notLoggedIn\">\r\n      <p>{props.adminRequest ? \"You need to be an admin to view this page\" : \"We are so sorry but you must be logged in to view this page\"}</p>\r\n      <div className=\"buttons\">\r\n        <Link to=\"/sign-in\">\r\n          <button>Sign In</button>\r\n        </Link>\r\n        <Link to=\"/sign-up\">\r\n          <button>Sign Up</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotLogged;\r\n","export default __webpack_public_path__ + \"static/media/pro.3e24b768.jpg\";","export default __webpack_public_path__ + \"static/media/admin.85cda2f5.svg\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}