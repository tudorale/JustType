{"version":3,"sources":["components/User.tsx","components/services/Firebase.tsx","components/subComponents/Html.tsx","components/Navs/LoggedNav.tsx","components/subComponents/NotLogged.tsx","images/pro.jpg","components/services/Statistics.tsx"],"names":["User","props","username","match","params","useState","userData","setUserData","status","setStatus","user","setUser","randomData","setRandomData","quotesData","setQuotesData","customData","setCustomData","randomDataTime","setRandomDataTime","quotesDataTime","setQuotesDataTime","customDataTime","setCustomDataTime","allUsernames","useEffect","spinner","document","querySelector","notLoggedIn","Firebase","auth","onAuthStateChanged","usr","style","display","db","collection","get","then","forEach","data","push","includes","where","query","doc","randomHistory","map","w","wpm","quotesHistory","customHistory","t","time","title","className","path","name","src","profileImage","pro","Pro","justTypeID","description","points","rank","keyboardLayout","bestWPM","lastWPM","races","randomTests","quotesTests","customTests","timestamp","toDate","getDate","getMonth","getFullYear","marginTop","length","Math","floor","reduce","a","b","labels","lineColor","pointColor","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Html","LoggedNav","notifications","setNotifications","isMounted","uid","onSnapshot","includeMetadataChanges","history","useHistory","mobileStatus","handleSignOut","signOut","notStatus","onClick","mobileNav","effect","opacity","zIndex","href","to","photoURL","wrapper","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","x","sender","message","id","play","NotLogged","Statistics","datasets","label","backgroundColor","borderColor","tension","pointBorderColor","options","maintainAspectRatio","legend","scales","xAxes","gridLines","color","yAxes"],"mappings":"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","file":"static/js/10.a438ff21.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../style/css/main.css\";\r\nimport Nav from \"./Navs/LoggedNav\";\r\nimport Firebase, { db } from \"./services/Firebase\";\r\nimport Pro from \"../images/pro.jpg\";\r\nimport NotLogged from \"./subComponents/NotLogged\";\r\nimport HTML from \"./subComponents/Html\";\r\nimport Statistics from \"./services/Statistics\";\r\n\r\nconst User = (props: any) => {\r\n  const username = props.match.params.username;\r\n  const [userData, setUserData] = useState<any>(\"\");\r\n  const [status, setStatus] = useState(\"Loading...\");\r\n  const [user, setUser] = useState<any>(\"\");\r\n\r\n  const [randomData, setRandomData] = useState<number[]>([]);\r\n  const [quotesData, setQuotesData] = useState<number[]>([]);\r\n  const [customData, setCustomData] = useState<number[]>([]);\r\n\r\n  const [randomDataTime, setRandomDataTime] = useState<string[]>([]);\r\n  const [quotesDataTime, setQuotesDataTime] = useState<string[]>([]);\r\n  const [customDataTime, setCustomDataTime] = useState<string[]>([]);\r\n\r\n  let allUsernames: string[] = [];\r\n\r\n  useEffect(() => {\r\n    let spinner = document.querySelector(\".userPageSpinner\") as HTMLDivElement;\r\n    let notLoggedIn = document.querySelector(\".notLoggedIn\") as HTMLDivElement;\r\n\r\n    Firebase.auth().onAuthStateChanged((usr) => {\r\n      if (usr) {\r\n        setUser(usr);\r\n        spinner.style.display = \"none\";\r\n\r\n        db.collection(\"users\")\r\n          .get()\r\n          .then((user) => {\r\n            user.forEach((data) => {\r\n              allUsernames.push(data.data().username);\r\n            });\r\n          })\r\n          .then(() => {\r\n            if (allUsernames.includes(username)) {\r\n              db.collection(\"users\")\r\n                .where(\"username\", \"==\", username)\r\n                .get()\r\n                .then((query: any) => {\r\n                  query.forEach((doc: any) => {\r\n                    setUserData(doc.data());\r\n                    setStatus(\"\");\r\n                    setRandomData(\r\n                      doc.data().randomHistory.map((w: any) => w.wpm)\r\n                    );\r\n                    setQuotesData(\r\n                      doc.data().quotesHistory.map((w: any) => w.wpm)\r\n                    );\r\n                    setCustomData(\r\n                      doc.data().customHistory.map((w: any) => w.wpm)\r\n                    );\r\n\r\n                    setRandomDataTime(\r\n                      doc.data().randomHistory.map((t: any) => t.time)\r\n                    );\r\n                    setQuotesDataTime(\r\n                      doc.data().quotesHistory.map((t: any) => t.time)\r\n                    );\r\n                    setCustomDataTime(\r\n                      doc.data().customHistory.map((t: any) => t.time)\r\n                    );\r\n                  });\r\n                });\r\n            } else {\r\n              setStatus(\r\n                \"This user does not exist or his/her account might have been deleted or the username was changed.\"\r\n              );\r\n            }\r\n          });\r\n      } else {\r\n        notLoggedIn.style.display = \"block\";\r\n        spinner.style.display = \"none\";\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <HTML\r\n        title={`JustType - ${userData ? userData.username : \"User\"} page`}\r\n      />\r\n\r\n      {user ? (\r\n        <div className=\"userPageWrapper\">\r\n          <Nav path=\"/play\" name=\"Main\" />\r\n          <div className=\"userPageContent\">\r\n            <p className=\"userPageStatus\">{status}</p>\r\n            {userData ? (\r\n              <div className=\"userPageGrid\">\r\n                <div className=\"userSectionOne\">\r\n                  <img src={userData.profileImage} />\r\n                  <div className=\"userPageInfo\">\r\n                    <h1>\r\n                      {userData.username}\r\n                      {userData.pro ? <img src={Pro} /> : null}\r\n                      <span>{userData.justTypeID}</span>\r\n                    </h1>\r\n                    <p className=\"userPageDescription\">\r\n                      {userData.description}\r\n                    </p>\r\n                    <p className=\"userPagePoints\">{`${userData.points} Points (${userData.rank})`}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"userSectionTwo\">\r\n                  <h1>Public info</h1>\r\n                  <p>\r\n                    Points: <span>{`${userData.points}`}</span>\r\n                  </p>\r\n                  <p>\r\n                    Keyboard Layout: <span>{userData.keyboardLayout}</span>\r\n                  </p>\r\n                  <p>\r\n                    Best: <span>{userData.bestWPM} WPM</span>\r\n                  </p>\r\n                  <p>\r\n                    Last test: <span>{userData.lastWPM} WPM</span>\r\n                  </p>\r\n                  <p>\r\n                    Tests: <span>{userData.races}</span>\r\n                  </p>\r\n                  <p>\r\n                    Tests on random category:{\" \"}\r\n                    <span>{userData.randomTests}</span>\r\n                  </p>\r\n                  <p>\r\n                    Tests on quotes category:{\" \"}\r\n                    <span>{userData.quotesTests}</span>\r\n                  </p>\r\n                  <p>\r\n                    Tests on custom category:{\" \"}\r\n                    <span>{userData.customTests}</span>\r\n                  </p>\r\n                  <p>\r\n                    Account created on:{\" \"}\r\n                    <span>{`${userData.timestamp.toDate().getDate()}/${\r\n                      userData.timestamp.toDate().getMonth() + 1\r\n                    }/${userData.timestamp.toDate().getFullYear()}`}</span>\r\n                  </p>\r\n\r\n                  <h1 style={{ marginTop: \"25px\" }}>Public statistics</h1>\r\n                  <p>\r\n                    Average WPM on random category:{\" \"}\r\n                    <span>\r\n                      {randomData.length >= 2\r\n                        ? Math.floor(\r\n                            randomData.reduce((a, b): number =>\r\n                              Math.floor(a + b)\r\n                            ) / randomData.length\r\n                          )\r\n                        : \"Unavailable\"}\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    Average WPM on quotes category:{\" \"}\r\n                    <span>\r\n                      {quotesData.length >= 2\r\n                        ? Math.floor(\r\n                            quotesData.reduce((a, b): number =>\r\n                              Math.floor(a + b)\r\n                            ) / quotesData.length\r\n                          )\r\n                        : \"Unavailable\"}\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    Average WPM on custom category:{\" \"}\r\n                    <span>\r\n                      {customData.length >= 2\r\n                        ? Math.floor(\r\n                            customData.reduce((a, b): number =>\r\n                              Math.floor(a + b)\r\n                            ) / customData.length\r\n                          )\r\n                        : \"Unavailable\"}\r\n                    </span>\r\n                  </p>\r\n\r\n                  {randomData.length >= 2 &&\r\n                  quotesData.length >= 2 &&\r\n                  customData.length >= 2 ? (\r\n                    <>\r\n                      <Statistics\r\n                        labels={randomDataTime}\r\n                        wpm={randomData}\r\n                        title=\"WPM on Random Category\"\r\n                        lineColor=\"#5c17c4\"\r\n                        pointColor=\"#20e6b4\"\r\n                      />\r\n\r\n                      <Statistics\r\n                        labels={quotesDataTime}\r\n                        wpm={quotesData}\r\n                        title=\"WPM on Quotes Category\"\r\n                        lineColor=\"#226be0\"\r\n                        pointColor=\"#d91ccc\"\r\n                      />\r\n\r\n                      <Statistics\r\n                        labels={customDataTime}\r\n                        wpm={customData}\r\n                        title=\"WPM on Custom Category\"\r\n                        lineColor=\"#5ce820\"\r\n                        pointColor=\"#e82077\"\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <p className=\"restriction\">\r\n                      This user did not play enough to unlock the statistics.\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <NotLogged />\r\n      )}\r\n      <div className=\"userPageSpinner\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBPuJnN5gI3o_YZeVNlZwOky-7Y6LDGrTI\",\r\n  authDomain: \"justtype-preview.firebaseapp.com\",\r\n  projectId: \"justtype-preview\",\r\n  storageBucket: \"justtype-preview.appspot.com\",\r\n  messagingSenderId: \"648878251377\",\r\n  appId: \"1:648878251377:web:e42775dc14919b1475ead0\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\n\r\nexport default fire;\r\n","import Helmet from \"react-helmet\";\r\n\r\nfunction Html(props:any) {\r\n    return (\r\n        <Helmet>\r\n                <title>{props.title}</title>\r\n                <style>\r\n                {`\r\n                 body {\r\n                    background-color: #0e0b11;       \r\n                  }\r\n                `}\r\n                </style>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default Html\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Firebase, { db } from \"../services/Firebase\";\r\n\r\nfunction LoggedNav(props: any) {\r\n  // states\r\n  const [user, setUser] = useState<any>(\"\");\r\n  const [notifications, setNotifications] = useState<any>(\"\");\r\n\r\n  // ui stuff & checking if the user is logged in\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    Firebase.auth().onAuthStateChanged((usr: any) => {\r\n      if (usr) {\r\n        if (isMounted) {\r\n          setUser(usr);\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // fixing a bug\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .onSnapshot(\r\n          {\r\n            includeMetadataChanges: true,\r\n          },\r\n          (doc: any) => {\r\n            if (isMounted) {\r\n              setNotifications(doc.data().notifications);\r\n            }\r\n          }\r\n        );\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [user]);\r\n\r\n  const history = useHistory();\r\n\r\n  let mobileStatus = false;\r\n\r\n  const handleMobile = () => {\r\n    mobileStatus = !mobileStatus;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    if (mobileStatus) {\r\n      mobileNav.style.display = \"block\";\r\n      effect.style.opacity = \"0.5\";\r\n      effect.style.zIndex = \"999\";\r\n    } else {\r\n      mobileNav.style.display = \"none\";\r\n      effect.style.opacity = \"0\";\r\n      effect.style.zIndex = \"-2\";\r\n    }\r\n  };\r\n\r\n  const handleRemoveMobile = () => {\r\n    mobileStatus = false;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    mobileNav.style.display = \"none\";\r\n    effect.style.opacity = \"0\";\r\n    effect.style.zIndex = \"-2\";\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    Firebase.auth().signOut();\r\n    history.push(\"/sign-in\");\r\n  };\r\n\r\n  let notStatus = false;\r\n\r\n  const handleNotifications = () => {\r\n    notStatus = !notStatus;\r\n    let wrapper = document.querySelector(\r\n      \".notificationsWrapper\"\r\n    ) as HTMLDivElement;\r\n\r\n    if (notStatus) {\r\n      wrapper.style.zIndex = \"900\";\r\n      wrapper.style.opacity = \"1\";\r\n    } else {\r\n      wrapper.style.zIndex = \"-100\";\r\n      wrapper.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"effectLogged\" onClick={handleRemoveMobile}></div>\r\n\r\n      <div className=\"navbarLogged\">\r\n        <h1 className=\"logoNavLogged\">\r\n          <a href=\"/\">\r\n            JustTyp<span></span>\r\n          </a>\r\n        </h1>\r\n\r\n        <div className=\"navContent\">\r\n          <ul>\r\n            <Link to={props.path}>\r\n              <li>{props.name}</li>\r\n            </Link>\r\n          </ul>\r\n\r\n          {/* {props.play ? <a href={props.path}>{props.name}</a> */}\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n            />\r\n          </Link>\r\n\r\n          <div className=\"notifications\">\r\n            <div className=\"notificationBox\" onClick={handleNotifications}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"44\"\r\n                height=\"44\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"#6f32be\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6\" />\r\n                <path d=\"M9 17v1a3 3 0 0 0 6 0v-1\" />\r\n              </svg>\r\n            </div>\r\n\r\n            <div className=\"notificationsWrapper\">\r\n              <h1>Notifications</h1>\r\n              {notifications ? (\r\n                notifications.map((x: any) => {\r\n                  return (\r\n                    <div className=\"notification\" key={x.id}>\r\n                      <p className=\"sender\">\r\n                        <span>from</span> {x.sender}\r\n                      </p>\r\n                      <p className=\"notificationMessage\">\r\n                        {x.message} <span> - {x.time}</span>\r\n                      </p>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"notificationSpinner\"></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"navButtonLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n\r\n          <div className=\"hamburgerLogged\" onClick={handleMobile}>\r\n            <div className=\"lineLogged  line1\"> </div>\r\n            <div className=\"lineLogged line2\"> </div>\r\n            <div className=\"lineLogged  line3\"> </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mobileNavLogged\">\r\n        <h1 className=\"logoNavMobileLogged\">\r\n          <a href=\"/\">\r\n            JustTyp<span></span>\r\n          </a>\r\n        </h1>\r\n\r\n        <div className=\"navContentMobile\">\r\n          <ul>\r\n            {props.play ? (\r\n              <a href={props.path}>{props.name}</a>\r\n            ) : (\r\n              <Link to={props.path}>\r\n                <li>{props.name}</li>\r\n              </Link>\r\n            )}\r\n          </ul>\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n            />\r\n          </Link>\r\n\r\n          <button className=\"navButtonMobileLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoggedNav;\r\n","import React from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NotLogged = () => {\r\n  return (\r\n    <div className=\"notLoggedIn\">\r\n      <p>You must be logged in to view this page</p>\r\n      <Link to=\"/sign-in\">\r\n        <button>Sign In</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotLogged;\r\n","export default __webpack_public_path__ + \"static/media/pro.3e24b768.jpg\";","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction Statistics(props: any) {\r\n  return (\r\n    <div className=\"graphic\">\r\n      <Line\r\n        data={{\r\n          labels: props.labels,\r\n          datasets: [\r\n            {\r\n              label: props.title,\r\n              data: props.wpm,\r\n              backgroundColor: props.pointColor,\r\n              fill: false,\r\n              borderColor: props.lineColor,\r\n              tension: 0,\r\n              pointBorderColor: props.pointColor,\r\n            },\r\n          ],\r\n        }}\r\n        height={400}\r\n        width={1600}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          legend: {\r\n            display: \"none\",\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                gridLines: {\r\n                  color: \"#19171d\",\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                gridLines: {\r\n                  color: \"#19171d\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n"],"sourceRoot":""}