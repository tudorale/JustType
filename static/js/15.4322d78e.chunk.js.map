{"version":3,"sources":["components/TestSpeed.tsx","components/services/Firebase.tsx","components/subComponents/Html.tsx","components/Navs/LoggedNav.tsx","components/subComponents/NotLogged.tsx"],"names":["TestSpeed","React","memo","props","HEADER","randomWords","require","axios","category","match","params","userStatus","useContext","UserContext","user","setUser","userData","setUserData","useState","countdown","setCountdown","timer","setTimer","userInput","setUserInput","symbols","setSymbols","wrongSymbols","setWrongSymbols","allSymbols","setAllSymbols","seconds","setSeconds","started","setStarted","finished","setFinished","wpm","setWpm","cpm","setCpm","displayPoints","setDisplayPoints","resultStatus","setResultStatus","randomTip","setRandomTip","quote","setQuote","tips","quoteData","setQuoteData","customText","setCustomText","customError","setCustomError","useLocation","state","playzone","playingText","randomPoints","min","max","Math","floor","random","useEffect","Firebase","auth","onAuthStateChanged","usr","mustLogged","document","querySelector","db","collection","doc","uid","onSnapshot","includeMetadataChanges","data","exactly","join","get","then","res","content","catch","err","console","log","style","display","textarea","btn","setAttribute","setTimeout","id","current","setInterval","s","useRef","idTimer","idSeconds","clearInterval","test","input","opacity","filter","removeAttribute","focus","time","clear","finishedRace","givenPoints","date","Date","h","getHours","getMinutes","y","getFullYear","m","getMonth","d","getDate","result","speedSection","blur","testOver","value","v","text","split","i","length","correctSymbols","round","checkWrongSymbols","update","points","randomTests","races","lastWPM","bestWPM","randomHistory","quotesTests","quotesHistory","customTests","customHistory","allTexts","wrapper","newObj","testsTaken","newArr","splice","push","config","title","name","className","path","onChange","e","target","maxLength","minLength","onClick","playZoneText","author","displayName","typingHubID","firestoreData","queue","map","letter","index","color","fontWeight","textDecoration","onPaste","preventDefault","onCopy","disabled","type","autoComplete","placeholder","rank","to","window","location","reload","marginTop","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Html","LoggedNav","notifications","setNotifications","isMounted","history","useHistory","mobileStatus","handleSignOut","signOut","notStatus","mobileNav","effect","zIndex","src","photoURL","alt","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","x","sender","message","play","href","NotLogged","adminRequest"],"mappings":"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","file":"static/js/15.4322d78e.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport NotLogged from \"./subComponents/NotLogged\";\r\nimport \"../style/css/main.css\";\r\nimport Nav from \"./Navs/LoggedNav\";\r\nimport Firebase, { db } from \"./services/Firebase\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport HTML from \"./subComponents/Html\";\r\nimport UserContext from \"./services/UserContext\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport {reviewText} from \"./subComponents/Interfaces\";\r\n\r\nconst TestSpeed = React.memo((props: any) => {\r\n  const randomWords = require(\"random-words\");\r\n  const axios = require(\"axios\");\r\n\r\n  const category = props.match.params.category;\r\n  let HEADER;\r\n\r\n  if (category === \"random\") {\r\n    HEADER = \"Random\"; // 20-40\r\n  } else if (category === \"quotes\") {\r\n    HEADER = \"Quotes\"; // 60-80\r\n  } else if (category === \"custom\") {\r\n    HEADER = \"Custom\"; // 20-40\r\n  }else {\r\n    HEADER = category;\r\n  }\r\n\r\n  const userStatus = useContext(UserContext);\r\n  const { user, setUser, userData, setUserData } = userStatus;\r\n\r\n  const [countdown, setCountdown] = useState<number | null>(null);\r\n  const [timer, setTimer] = useState<number>(60);\r\n  const [userInput, setUserInput] = useState<string>(\"\");\r\n\r\n  const [symbols, setSymbols] = useState<number>(0);\r\n  const [wrongSymbols, setWrongSymbols] = useState<number>(0);\r\n  const [allSymbols, setAllSymbols] = useState<number>(0);\r\n  const [seconds, setSeconds] = useState<number>(1);\r\n\r\n  const [started, setStarted] = useState<boolean>(false);\r\n  const [finished, setFinished] = useState<boolean>(false);\r\n  const [wpm, setWpm] = useState<number>(0);\r\n  const [cpm, setCpm] = useState<number>(0);\r\n  const [displayPoints, setDisplayPoints] = useState(0);\r\n  const [resultStatus, setResultStatus] = useState<string>(\r\n    \"Race finished, below you have your statistics.\"\r\n  );\r\n  const [randomTip, setRandomTip] = useState<string>(\"\");\r\n\r\n  const [quote, setQuote] = useState<string>(\"Loading...\");\r\n\r\n  const tips = [\r\n    \"You can use CTRL + Backspace (Win) to delete a whole word.\",\r\n    \"Try to type without looking at the keyboard, look at your screen, you will type faster!\",\r\n    \"Use your at least 7 fingers when you type, you will type faster.\",\r\n    \"Is better to type correctly and a bit slower than wrong and faster.\",\r\n    \"If you have to type an uppercase letter use SHIFT + key instead of CapsLock.\",\r\n    \"Maintain a good and a comfortable position of your body.\",\r\n    \"Place your hands on the home row of the keyboard, hand placement is important.\",\r\n    \"Stretch your hands, shoulders, your neck and don't be tired, you will type easier.\",\r\n    \"Scan the text in advance with one or two words.\",\r\n  ];\r\n\r\n  const [quoteData, setQuoteData] = useState<any>({});\r\n\r\n  const [customText, setCustomText] = useState(\"\");\r\n  const [customError, setCustomError] = useState(\"\");\r\n\r\n  // get the text for playzone category\r\n  const location = useLocation<{playzone: boolean, playingText: string}>();\r\n\r\n  const {playzone, playingText} = location.state;\r\n\r\n  function randomPoints(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setRandomTip(tips[Math.floor(Math.random() * 9)]);\r\n    Firebase.auth().onAuthStateChanged((usr: any) => {\r\n      let mustLogged = document.querySelector(\".notLoggedIn\") as HTMLDivElement;\r\n\r\n      if (usr) {\r\n        setUser(usr);\r\n\r\n        db.collection(\"users\")\r\n          .doc(usr.uid)\r\n          .onSnapshot(\r\n            {\r\n              includeMetadataChanges: true,\r\n            },\r\n            (doc: any) => {\r\n              setUserData(doc.data());\r\n            }\r\n          );\r\n\r\n        if (category === \"random\") {\r\n          setQuote(randomWords({ exactly: randomPoints(20, 25), join: \" \" }));\r\n        }\r\n\r\n        if (category === \"quotes\") {\r\n          axios\r\n            .get(\"https://api.quotable.io/random\")\r\n            .then((res: any) => {\r\n              setQuote(res.data.content);\r\n              setQuoteData(res.data);\r\n            })\r\n            .catch((err: any) => {\r\n              console.log(\"An error has occured: \", err);\r\n            });\r\n        }\r\n\r\n        if (!started) {\r\n          if (category === \"custom\" && quote === \"Loading...\") {\r\n            setQuote(\"Waiting for text\");\r\n            let countdown = document.querySelector(\r\n              \".countdown\"\r\n            ) as HTMLHeadingElement;\r\n            countdown.style.display = \"none\";\r\n            \r\n            if(playzone){\r\n              setCustomText(playingText)\r\n              setQuote(playingText);\r\n\r\n              let content = document.querySelector(\".customText\") as HTMLDivElement;\r\n              let textarea = document.querySelector(\"#custom\") as HTMLTextAreaElement;\r\n              let btn = document.querySelector(\"#btn\") as HTMLButtonElement;\r\n              let countdown = document.querySelector(\".countdown\") as HTMLHeadingElement;\r\n              \r\n              btn.setAttribute(\"disabled\", \"\");\r\n              textarea.setAttribute(\"readonly\", \"\");\r\n              countdown.style.display = \"block\";\r\n              setCountdown(5)\r\n              content.style.display = \"none\";\r\n\r\n              setTimeout(() => {\r\n                id.current = setInterval(() => {\r\n                  setCountdown((s: any) => s - 1);\r\n                }, 1000);\r\n              }, 500);\r\n            }\r\n\r\n          } else {\r\n            setCountdown(5)\r\n            id.current = setInterval(() => {\r\n              setCountdown((s: any) => s - 1);\r\n            }, 1000);\r\n          }\r\n        }\r\n\r\n      } else {\r\n        if (mustLogged) {\r\n          mustLogged.style.display = \"block\";\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // refs for timers\r\n  const id = React.useRef<any>();\r\n  const idTimer = React.useRef<any>();\r\n  const idSeconds = React.useRef<any>();\r\n\r\n  const clear = () => {\r\n    clearInterval(id.current);\r\n\r\n    if (quote !== \"Loading...\") {\r\n      let test = document.querySelector(\".testWrapper\") as HTMLDivElement;\r\n      let input = document.querySelector(\"#text\") as HTMLInputElement;\r\n      let countdown = document.querySelector(\".countdown\")! as HTMLHeadElement;\r\n\r\n      if (test) {\r\n        test.style.opacity = \"1\";\r\n        test.style.filter = \"blur(0px)\";\r\n      }\r\n      if (input) {\r\n        input.removeAttribute(\"disabled\");\r\n        input.focus();\r\n      }\r\n\r\n      if (countdown) {\r\n        countdown.style.display = \"none\";\r\n      }\r\n\r\n      idTimer.current = setInterval(() => {\r\n        setTimer((time) => time - 1);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const startTimer = () => {\r\n    idSeconds.current = setInterval(() => {\r\n      setSeconds((s) => s + 1);\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (countdown === 0) {\r\n      clear();\r\n    }\r\n  }, [countdown]);\r\n\r\n  useEffect(() => {\r\n    if (timer === 0) {\r\n      // test finished.\r\n      finishedRace();\r\n      setResultStatus(\"Time's up, below you have your statistics\");\r\n    }\r\n  }, [timer]);\r\n\r\n  useEffect(() => {\r\n    if (started) {\r\n      startTimer();\r\n    }\r\n  }, [started]);\r\n\r\n  let givenPoints = 0;\r\n\r\n  let date = new Date();\r\n  let h = date.getHours();\r\n  let min = date.getMinutes();\r\n  let y = date.getFullYear();\r\n  let m = date.getMonth() + 1;\r\n  let d = date.getDate();\r\n\r\n  const categoryRandom = () => {\r\n    wpm <= 30 ? (givenPoints = 5) : (givenPoints = randomPoints(20, 40));\r\n\r\n    setDisplayPoints(givenPoints);\r\n\r\n    db.collection(\"users\")\r\n      .doc(user.uid)\r\n      .update({\r\n        points: userData.points + givenPoints,\r\n        randomTests:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? userData.randomTests + 1\r\n            : userData.randomTests,\r\n        races:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? userData.races + 1\r\n            : userData.races,\r\n        lastWPM:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? wpm\r\n            : userData.lastWPM,\r\n        bestWPM:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? wpm > userData.bestWPM\r\n              ? wpm\r\n              : userData.bestWPM\r\n            : userData.bestWPM,\r\n        randomHistory:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? [\r\n                ...userData.randomHistory,\r\n                { wpm: wpm, time: `${h}:${min} ${d}/${m}/${y}` },\r\n              ]\r\n            : userData.randomHistory,\r\n      });\r\n  };\r\n\r\n  const categoryQuotes = () => {\r\n    wpm <= 50 ? (givenPoints = 5) : (givenPoints = randomPoints(50, 80));\r\n\r\n    setDisplayPoints(givenPoints);\r\n\r\n    db.collection(\"users\")\r\n      .doc(user.uid)\r\n      .update({\r\n        points: userData.points + givenPoints,\r\n        quotesTests:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? userData.quotesTests + 1\r\n            : userData.quotesTests,\r\n        races:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? userData.races + 1\r\n            : userData.races,\r\n        lastWPM:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? wpm\r\n            : userData.lastWPM,\r\n        bestWPM:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? wpm > userData.bestWPM\r\n              ? wpm\r\n              : userData.bestWPM\r\n            : userData.bestWPM,\r\n        quotesHistory:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? [\r\n                ...userData.quotesHistory,\r\n                { wpm: wpm, time: `${h}:${min} ${d}/${m}/${y}` },\r\n              ]\r\n            : userData.quotesHistory,\r\n      });\r\n  };\r\n\r\n  const categoryCustom = () => {\r\n    wpm <= 30 ? (givenPoints = 5) : (givenPoints = randomPoints(20, 40));\r\n\r\n    setDisplayPoints(givenPoints);\r\n\r\n    db.collection(\"users\")\r\n      .doc(user.uid)\r\n      .update({\r\n        points: userData.points + givenPoints,\r\n        customTests:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? userData.customTests + 1\r\n            : userData.customTests,\r\n        races:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? userData.races + 1\r\n            : userData.races,\r\n        lastWPM:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? wpm\r\n            : userData.lastWPM,\r\n        bestWPM:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? wpm > userData.bestWPM\r\n              ? wpm\r\n              : userData.bestWPM\r\n            : userData.bestWPM,\r\n        customHistory:\r\n          Math.round((symbols / allSymbols) * 100) >= 70\r\n            ? [\r\n                ...userData.customHistory,\r\n                { wpm: wpm, time: `${h}:${min} ${d}/${m}/${y}` },\r\n              ]\r\n            : userData.customHistory,\r\n      });\r\n    \r\n    \r\n      if(playzone){\r\n        db.collection(\"playzone\").doc(\"texts\").get().then((data:any) => {\r\n          let allTexts = data.data().wrapper;\r\n          for(let i = 0; i<allTexts.length; i++){\r\n            if(allTexts[i].text === playingText){\r\n              \r\n              let newObj = {\r\n                ...allTexts[i],\r\n                testsTaken: allTexts[i].testsTaken + 1\r\n              } \r\n              let newArr = allTexts;\r\n              newArr.splice(i)\r\n              newArr.push(newObj);\r\n  \r\n              db.collection(\"playzone\").doc(\"texts\").update({\r\n                wrapper: newArr, // array with nr. of etests updated\r\n              })\r\n            \r\n            }\r\n          }\r\n        })\r\n      }\r\n  };\r\n\r\n  const finishedRace = () => {\r\n    setFinished(true);\r\n\r\n    clearInterval(idSeconds.current);\r\n    clearInterval(idTimer.current);\r\n\r\n    let result = document.querySelector(\".result\") as HTMLDivElement;\r\n    let speedSection = document.querySelector(\r\n      \".neededWrapper\"\r\n    ) as HTMLDivElement;\r\n    let input = document.querySelector(\"#text\") as HTMLInputElement;\r\n\r\n    if (input) {\r\n      input.blur();\r\n      input.setAttribute(\"disabled\", \"\");\r\n      input.setAttribute(\"readonly\", \"\");\r\n      input.setAttribute(\"maxlength\", \"0\");\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n    if (result && speedSection) {\r\n      result.style.display = \"block\";\r\n      speedSection.style.opacity = \"0.5\";\r\n      speedSection.style.filter = \"blur(2px)\";\r\n    }\r\n\r\n    let testOver = document.querySelector(\".testOver\") as HTMLDivElement;\r\n    if (testOver) {\r\n      testOver.style.display = \"block\";\r\n    }\r\n  };\r\n\r\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!finished) {\r\n      setUserInput(e.target.value);\r\n      setAllSymbols((s) => s + 1);\r\n      setStarted(true);\r\n    }\r\n  };\r\n\r\n  const correctSymbols = (v: string) => {\r\n    const text = quote;\r\n    return v.split(\"\").filter((s: string, i: number) => s === text[i]).length;\r\n  };\r\n\r\n  const checkWrongSymbols = (v: string) => {\r\n    const text = quote;\r\n    return v.split(\"\").filter((s: string, i: number) => s !== text[i]).length;\r\n  };\r\n\r\n  let CORRECT_COLOR: string = \"#7e41da\";\r\n  let WRONG_COLOR: string = \"red\";\r\n\r\n  const isFinished = (value: string) => {\r\n    if (!finished) {\r\n      if (value.length === quote.length) {\r\n        finishedRace();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSymbols(correctSymbols(userInput));\r\n    setWpm(Math.round(symbols / 5 / (seconds / 60)));\r\n    setCpm(Math.round((symbols / seconds) * 60));\r\n\r\n    setWrongSymbols(checkWrongSymbols(userInput));\r\n    isFinished(userInput);\r\n\r\n  }, [userInput]);\r\n\r\n  useEffect(() => {\r\n    if (finished) {\r\n      if (category === \"random\") {\r\n        categoryRandom();\r\n      } else if (category === \"quotes\") {\r\n        categoryQuotes();\r\n      } else if (category === \"custom\") {\r\n        categoryCustom();\r\n      }\r\n    }\r\n  }, [wpm, finished]);\r\n\r\n  const handleCustomText = () => {\r\n\r\n    let content = document.querySelector(\".customText\") as HTMLDivElement;\r\n    let textarea = document.querySelector(\"#custom\") as HTMLTextAreaElement;\r\n    let btn = document.querySelector(\"#btn\") as HTMLButtonElement;\r\n    let countdown = document.querySelector(\".countdown\") as HTMLHeadingElement;\r\n\r\n    const regEx = /^[a-zA-Z0-9\\.\\,\\;\\?\\'\\\"\\(\\)\\!\\$\\-\\& \\s]*$/;\r\n\r\n    if (customText.length >= 100 && customText.length <= 250) {\r\n      if (regEx.test(customText)) {\r\n\r\n        setQuote(customText);\r\n        btn.setAttribute(\"disabled\", \"\");\r\n        textarea.setAttribute(\"readonly\", \"\");\r\n        countdown.style.display = \"block\";\r\n        setCountdown(5)\r\n        content.style.display = \"none\";\r\n\r\n        setTimeout(() => {\r\n          id.current = setInterval(() => {\r\n            setCountdown((s: any) => s - 1);\r\n          }, 1000);\r\n        }, 500);\r\n      } else {\r\n        setCustomError(\r\n          \"You can only use lowercase, uppercase letters, numbers, punctuation and some symbols such as: () ? ! - $ & \"\r\n        );\r\n      }\r\n    } else {\r\n      setCustomError(\r\n        \"The text length must be at least 100 characters and max 250 characters.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const newTest = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const handlePlayZone = () => {\r\n  \r\n    const regEx = /^[a-zA-Z0-9\\.\\,\\;\\?\\'\\\"\\(\\)\\!\\$\\-\\& \\s]*$/;\r\n\r\n    if(userData.points >= 700){\r\n      if (customText.length >= 100 && customText.length <= 250) {\r\n        if (regEx.test(customText)) {\r\n\r\n          // add text to review\r\n          let playZoneText: reviewText = {\r\n            author: user?.displayName,\r\n            text: customText,\r\n            time: `${h}:${min} ${d}/${m}/${y}`,\r\n            id: user?.uid,\r\n            typingHubID: userData?.typingHubID,\r\n          };\r\n\r\n          // get the texts in queue\r\n          db.collection(\"playzone\")\r\n            .doc(\"review\")\r\n            .get()\r\n            .then((doc: any) => {\r\n              let firestoreData = doc.data().queue;\r\n\r\n              if(firestoreData.length >= 1){\r\n                firestoreData.map((data: reviewText) => {\r\n                  if(data.author === user?.displayName){\r\n                  setCustomError(\"You already sent a text for a review, you can not send another.\")\r\n                  }else{\r\n                    // update the queue with new text\r\n                    firestoreData.push(playZoneText)\r\n\r\n                    db.collection(\"playzone\")\r\n                    .doc(\"review\")\r\n                    .update({\r\n                      queue: firestoreData,\r\n                    })\r\n                    .then(() => {\r\n                      setCustomError(\"Your text was submitted for a review, if it is appropriate for the play zone, it will appear there.\")\r\n                    });\r\n                  }\r\n              })\r\n              }else{\r\n                // if empty queue\r\n                firestoreData.push(playZoneText)\r\n                db.collection(\"playzone\")\r\n                .doc(\"review\")\r\n                .update({\r\n                  queue: firestoreData,\r\n                })\r\n                .then(() => {\r\n                  setCustomError(\"Your text was submitted for a review, if it is appropriate for the play zone, it will appear there.\")\r\n                });\r\n              }\r\n              \r\n            });\r\n\r\n        } else {\r\n          setCustomError(\r\n            \"You can only use lowercase, uppercase letters, numbers, punctuation and some symbols such as: () ? ! - $ & \"\r\n          );\r\n        }\r\n      } else {\r\n        setCustomError(\r\n          \"The text length must be at least 100 characters and max 250 characters.\"\r\n        );\r\n      }\r\n    }else{\r\n      setCustomError(\"You need at least 700 points to add a text to the play zone.\")\r\n    }\r\n  }\r\n\r\n  const config = require(\"../config.json\")\r\n\r\n  return (\r\n    <>\r\n      <HTML title={`${config.name} | Test your speed`} />\r\n\r\n      {category === \"random\" ||\r\n      category === \"quotes\" ||\r\n      category === \"custom\"  ? (\r\n        <>\r\n          {user ? (\r\n            <div className=\"testSpeedExtraWrapper\">\r\n              <Nav path=\"/play\" name=\"Main\" />\r\n              <div className=\"testSpeedWrapper\">\r\n                {category === \"custom\" ? (\r\n                  <div className=\"customText\">\r\n                    <p>\r\n                      Enter your text below, make sure you follow the rules of\r\n                      characters; min = 100, max = 250.\r\n                    </p>\r\n                    <textarea\r\n                      onChange={(e) => {\r\n                        setCustomText(e.target.value);\r\n                        setCustomError(\"\");\r\n                      }}\r\n                      maxLength={250}\r\n                      minLength={150}\r\n                      value={customText}\r\n                      id=\"custom\"\r\n                    ></textarea>\r\n                    <button id=\"btn\" onClick={handleCustomText}>\r\n                      Go\r\n                    </button>\r\n                    <button id=\"playZone\" onClick={handlePlayZone}>\r\n                      Add to Play Zone\r\n                    </button>\r\n                    <p className=\"lengthText\">{customText.length}/250</p>\r\n                    <p>{customError}</p>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <h1 className=\"countdown\">{countdown}</h1>\r\n\r\n                <div className=\"testWrapper\">\r\n                  <div className=\"neededWrapper\">\r\n                    <div className=\"quote\">\r\n\r\n                    {quote.split(\"\").map((letter, index) => {\r\n\r\n                      let color;\r\n\r\n                      if (index < userInput.length) {\r\n                        color =\r\n                          letter === userInput[index]\r\n                            ? CORRECT_COLOR\r\n                            : WRONG_COLOR;\r\n\r\n                        if (letter === \" \") { // if user have to type a space and he is not doing it it will appear the key that he typed\r\n                          if (userInput[index] !== letter) {\r\n                            letter = userInput[index];\r\n                          }\r\n                        }\r\n                      }\r\n\r\n                      if (index === userInput.length) { // code for the current letter that user have to type\r\n                        return (\r\n                          <span\r\n                            key={index}\r\n                            className={\"letter\"}\r\n                            style={{\r\n                              color: color,\r\n                              fontWeight: 700,\r\n                              textDecoration: \"underline\",\r\n                            }}\r\n                          >\r\n                            {letter === \" \" ? \" \" : letter} {/* *** */}\r\n                          </span>\r\n                        );\r\n                      }\r\n\r\n                      return (\r\n                        <span\r\n                          key={index}\r\n                          className={\"letter\"}\r\n                          style={{ color: color }}\r\n                        >\r\n                          {letter === \" \" ? \" \" : letter}\r\n                        </span> // *** is weird isn't it? is not a normal space is &nbsp; using alt + 2 2 5 using that so it will appear as a space into the DOM\r\n                      );\r\n\r\n                    })}\r\n\r\n                    </div>\r\n\r\n                    <input\r\n                      onPaste={(e) => e.preventDefault()}\r\n                      onCopy={(e) => e.preventDefault()}\r\n                      id=\"text\"\r\n                      maxLength={quote.length}\r\n                      onChange={handleInput}\r\n                      disabled\r\n                      type=\"text\"\r\n                      autoComplete=\"off\"\r\n                      placeholder={\"Start typing the text above\"}\r\n                    />\r\n\r\n                    <div className=\"leftInfo\">\r\n                      <p className=\"category\">Category: {HEADER}</p>\r\n                      <p className=\"features\">\r\n                        {category == \"random\" && \"Random words\"}\r\n                        {category == \"quotes\" &&\r\n                          \"Lowercase, uppercase words, punctuation\"}\r\n                        {category == \"custom\" &&\r\n                          \"Allowed lowercase, uppercase words, punctuation, symbols\"}\r\n                      </p>\r\n                      <p className=\"account\">\r\n                        Account: {user ? user.displayName : \"Loading...\"},{\" \"}\r\n                        {userData ? userData.points : \"Loading\"} Points,{\" \"}\r\n                        {userData ? userData.rank : \"Loading...\"}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"rightInfo\">\r\n                      <p className=\"timeleft\">{timer}</p>\r\n                      <p className=\"abandon\">\r\n                        <Link to=\"/play\">Abandon</Link>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <p className=\"randomTip\">Random Tip: {randomTip}</p>\r\n\r\n                  <div className=\"testOver\">\r\n                    <p>This test is over.</p>\r\n                    <div className=\"testOverButtons\">\r\n                      <button onClick={newTest}>New test on {HEADER}</button>\r\n\r\n                      <Link to=\"/play\">\r\n                        <button className=\"homeButton\">Go home</button>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"result\">\r\n                    <h1>{resultStatus}</h1>\r\n                    <p className=\"givenPoints\">\r\n                      <span>+{displayPoints}</span> points. Total points:{\" \"}\r\n                      <span>\r\n                        {userData ? userData.points : \"Calculating..\"}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"infoResult\">\r\n                      {displayPoints === 5\r\n                        ? `You have to get over \r\n                          ${category === \"random\" ? \"30\" : \"\"}\r\n                          ${category === \"quotes\" ? \"50\" : \"\"}\r\n                          ${category === \"custom\" ? \"30\" : \"\"}\r\n                                                            \r\n                          WPM for this category to get the normal amount of points.`\r\n                        : null}\r\n                    </p>\r\n                    <p className=\"notAllowed\">\r\n                      {Math.round((symbols / allSymbols) * 100) < 70\r\n                        ? \"You have an accuracy that is less than 70%, your score will not be saved.\"\r\n                        : \"\"}\r\n                    </p>\r\n                    <p>\r\n                      Category of the test: <span>{HEADER}</span>\r\n                    </p>\r\n                    <p>\r\n                      WPM (Words Per Minute): <span>{!wpm ? \"0\" : wpm}</span>\r\n                    </p>\r\n                    <p>\r\n                      CPM (Characters Per Minute):{\" \"}\r\n                      <span>{!cpm ? \"0\" : cpm}</span>\r\n                    </p>\r\n                    <p>\r\n                      Text typed in: <span>{seconds} seconds</span>\r\n                    </p>\r\n                    <p>\r\n                      Time left: <span>{timer} seconds</span>\r\n                    </p>\r\n                    <p>\r\n                      Correct symbols: <span>{symbols}</span>\r\n                    </p>\r\n                    <p>\r\n                      Wrong symbols on text: <span>{wrongSymbols}</span>\r\n                    </p>\r\n                    <p>\r\n                      Accuracy:{\" \"}\r\n                      <span>\r\n                        {!Math.round((symbols / allSymbols) * 100)\r\n                          ? \"0\"\r\n                          : Math.round((symbols / allSymbols) * 100)}\r\n                        %\r\n                      </span>\r\n                    </p>\r\n                    <p>\r\n                      Total keystrokes: <span>{allSymbols}</span>\r\n                    </p>\r\n                    <p>\r\n                      Text length: <span>{quote.length}</span> characters\r\n                      (including spaces)\r\n                    </p>\r\n                    <p>\r\n                      Unnecessary keystrokes:{\" \"}\r\n                      <span>\r\n                        {allSymbols > quote.length\r\n                          ? allSymbols - quote.length\r\n                          : \"0\"}\r\n                      </span>\r\n                    </p>\r\n                    {category === \"quotes\" ? (\r\n                      <p>\r\n                        A quote from: <span>{quoteData.author}</span>\r\n                      </p>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <p style={{ marginTop: \"20px\" }}>\r\n                      <Link to=\"/info\">How we do it & Good to know</Link>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <NotLogged />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p className=\"categoryNotExist\">\r\n          This category ({category}) does not exist, sorry!{\" \"}\r\n          <HashLink to=\"/play\">Play</HashLink>\r\n        </p>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TestSpeed;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBPuJnN5gI3o_YZeVNlZwOky-7Y6LDGrTI\",\r\n  authDomain: \"justtype-preview.firebaseapp.com\",\r\n  projectId: \"justtype-preview\",\r\n  storageBucket: \"justtype-preview.appspot.com\",\r\n  messagingSenderId: \"648878251377\",\r\n  appId: \"1:648878251377:web:e42775dc14919b1475ead0\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\n\r\nexport default fire;\r\n","import Helmet from \"react-helmet\";\r\n\r\nfunction Html(props: any) {\r\n  return (\r\n    <Helmet>\r\n      <title>{props.title}</title>\r\n      <style>\r\n        {`\r\n                 body {\r\n                    background-color: #0b101b;       \r\n                  }\r\n                `}\r\n      </style>\r\n    </Helmet>\r\n  );\r\n}\r\n\r\nexport default Html;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Firebase, { db } from \"../services/Firebase\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport UserContext from \"../services/UserContext\";\r\n\r\nfunction LoggedNav(props: any) {\r\n  // states\r\n  const [notifications, setNotifications] = useState<any>(\"\");\r\n\r\n  const userStatus = useContext(UserContext);\r\n  const { user, setUser} = userStatus;\r\n\r\n  // ui stuff & checking if the user is logged in\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    Firebase.auth().onAuthStateChanged((usr: any) => {\r\n      if (usr) {\r\n        if (isMounted) {\r\n          setUser(usr);\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // fixing a bug\r\n    if (user) {\r\n      db.collection(\"notifications\")\r\n        .doc(\"global\")\r\n        .onSnapshot(\r\n          {\r\n            includeMetadataChanges: true,\r\n          },\r\n          (doc: any) => {\r\n            if (isMounted) {\r\n              setNotifications(doc.data().wrapper);\r\n            }\r\n          }\r\n        );\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [user]);\r\n\r\n  const history = useHistory();\r\n\r\n  let mobileStatus = false;\r\n\r\n  const handleMobile = () => {\r\n    mobileStatus = !mobileStatus;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    if (mobileStatus) {\r\n      mobileNav.style.display = \"block\";\r\n      effect.style.opacity = \"0.5\";\r\n      effect.style.zIndex = \"999\";\r\n    } else {\r\n      mobileNav.style.display = \"none\";\r\n      effect.style.opacity = \"0\";\r\n      effect.style.zIndex = \"-2\";\r\n    }\r\n  };\r\n\r\n  const handleRemoveMobile = () => {\r\n    mobileStatus = false;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    mobileNav.style.display = \"none\";\r\n    effect.style.opacity = \"0\";\r\n    effect.style.zIndex = \"-2\";\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    Firebase.auth().signOut();\r\n    history.push(\"/sign-in\");\r\n  };\r\n\r\n  let notStatus = false;\r\n\r\n  const handleNotifications = () => {\r\n    notStatus = !notStatus;\r\n    let wrapper = document.querySelector(\r\n      \".notificationsWrapper\"\r\n    ) as HTMLDivElement;\r\n\r\n    if (notStatus) {\r\n      wrapper.style.zIndex = \"900\";\r\n      wrapper.style.opacity = \"1\";\r\n    } else {\r\n      wrapper.style.zIndex = \"-100\";\r\n      wrapper.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"effectLogged\" onClick={handleRemoveMobile}></div>\r\n\r\n      <div className=\"navbarLogged\">\r\n        <h1 className=\"logoNavLogged\">\r\n          <HashLink to=\"/\">\r\n           TypingHu<span></span>\r\n          </HashLink>\r\n        </h1>\r\n\r\n        <div className=\"navContent\">\r\n          <ul>\r\n            <Link to={props.path}>\r\n              <li>{props.name}</li>\r\n            </Link>\r\n          </ul>\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n\r\n          <div className=\"notifications\">\r\n            <div className=\"notificationBox\" onClick={handleNotifications}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"44\"\r\n                height=\"44\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"#6f32be\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6\" />\r\n                <path d=\"M9 17v1a3 3 0 0 0 6 0v-1\" />\r\n              </svg>\r\n            </div>\r\n\r\n            <div className=\"notificationsWrapper\">\r\n              <h1>Notifications</h1>\r\n              {notifications ? \r\n                notifications.length >= 1 ? (\r\n                  notifications.map((x: any) => {\r\n                    return (\r\n                      <div className=\"notification\" key={x.id}>\r\n                        <p className=\"sender\">\r\n                          <span>from</span> {x.sender}\r\n                        </p>\r\n                        <p className=\"notificationMessage\">\r\n                          {x.message} <span> - {x.time}</span>\r\n                        </p>\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : <p className=\"zeroNotifications\">You have zero notifications!</p>\r\n              : (\r\n                <div className=\"notificationSpinner\"></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"navButtonLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n\r\n          <div className=\"hamburgerLogged\" onClick={handleMobile}>\r\n            <div className=\"lineLogged  line1\"> </div>\r\n            <div className=\"lineLogged line2\"> </div>\r\n            <div className=\"lineLogged  line3\"> </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mobileNavLogged\">\r\n        <h1 className=\"logoNavMobileLogged\">\r\n          <HashLink to=\"/\">\r\n           TypingHu<span></span>\r\n          </HashLink>\r\n        </h1>\r\n\r\n        <div className=\"navContentMobile\">\r\n          <ul>\r\n            {props.play ? (\r\n              <a href={props.path}>{props.name}</a>\r\n            ) : (\r\n              <Link to={props.path}>\r\n                <li>{props.name}</li>\r\n              </Link>\r\n            )}\r\n          </ul>\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n\r\n          <button className=\"navButtonMobileLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoggedNav;\r\n","import React from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NotLogged = (props: any) => {\r\n  return (\r\n    <div className=\"notLoggedIn\">\r\n      <p>{props.adminRequest ? \"You need to be an admin to view this page\" : \"We are so sorry but you must be logged in to view this page\"}</p>\r\n      <div className=\"buttons\">\r\n        <Link to=\"/sign-in\">\r\n          <button>Sign In</button>\r\n        </Link>\r\n        <Link to=\"/sign-up\">\r\n          <button>Sign Up</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotLogged;\r\n"],"sourceRoot":""}