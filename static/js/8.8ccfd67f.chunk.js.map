{"version":3,"sources":["components/Profile.tsx","components/services/Firebase.tsx","components/subComponents/Html.tsx","components/Navs/LoggedNav.tsx","components/subComponents/NotLogged.tsx","images/pro.jpg","components/services/Statistics.tsx"],"names":["Profile","userStatus","useContext","UserContext","user","setUser","userData","setUserData","useState","randomData","setRandomData","quotesData","setQuotesData","customData","setCustomData","randomDataTime","setRandomDataTime","quotesDataTime","setQuotesDataTime","customDataTime","setCustomDataTime","useEffect","Firebase","auth","onAuthStateChanged","usr","spinner","document","querySelector","notLoggedIn","db","collection","doc","uid","get","then","data","style","display","randomHistory","map","w","wpm","quotesHistory","customHistory","t","time","catch","err","console","log","message","points","id","update","rank","title","className","path","name","src","photoURL","alt","displayName","pro","Pro","justTypeID","description","keyboardLayout","bestWPM","lastWPM","races","randomTests","quotesTests","customTests","to","length","Math","floor","reduce","a","b","labels","lineColor","pointColor","marginTop","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Html","props","LoggedNav","notifications","setNotifications","isMounted","onSnapshot","includeMetadataChanges","history","useHistory","mobileStatus","handleSignOut","signOut","push","notStatus","onClick","mobileNav","effect","opacity","zIndex","wrapper","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","x","sender","play","href","NotLogged","Statistics","datasets","label","backgroundColor","lineTension","borderColor","pointBorderColor","options","maintainAspectRatio","layout","padding","scales","xAxes","gridLines","color","ticks","yAxes"],"mappings":"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","file":"static/js/8.8ccfd67f.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../style/css/main.css\";\r\nimport Nav from \"./Navs/LoggedNav\";\r\nimport Firebase, { db } from \"./services/Firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pro from \"../images/pro.jpg\";\r\nimport HTML from \"./subComponents/Html\";\r\nimport NotLogged from \"./subComponents/NotLogged\";\r\nimport Statistics from \"./services/Statistics\";\r\nimport UserContext from \"./services/UserContext\";\r\nimport Linkify from \"react-linkify\";\r\n\r\nfunction Profile() {\r\n  const userStatus = useContext(UserContext);\r\n  const { user, setUser, userData, setUserData } = userStatus;\r\n\r\n  const [randomData, setRandomData] = useState<number[]>([]);\r\n  const [quotesData, setQuotesData] = useState<number[]>([]);\r\n  const [customData, setCustomData] = useState<number[]>([]);\r\n\r\n  const [randomDataTime, setRandomDataTime] = useState<string[]>([]);\r\n  const [quotesDataTime, setQuotesDataTime] = useState<string[]>([]);\r\n  const [customDataTime, setCustomDataTime] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    Firebase.auth().onAuthStateChanged((usr) => {\r\n      let spinner = document.querySelector(\r\n        \".loadingSpinnerProfile\"\r\n      ) as HTMLDivElement;\r\n      let notLoggedIn = document.querySelector(\r\n        \".notLoggedIn\"\r\n      ) as HTMLDivElement;\r\n\r\n      if (usr) {\r\n        setUser(usr);\r\n\r\n        db.collection(\"users\")\r\n          .doc(usr.uid)\r\n          .get()\r\n          .then((doc: any) => {\r\n            setUserData(doc.data());\r\n            spinner.style.display = \"none\";\r\n            setRandomData(doc.data().randomHistory.map((w: any) => w.wpm));\r\n            setQuotesData(doc.data().quotesHistory.map((w: any) => w.wpm));\r\n            setCustomData(doc.data().customHistory.map((w: any) => w.wpm));\r\n\r\n            setRandomDataTime(doc.data().randomHistory.map((t: any) => t.time));\r\n            setQuotesDataTime(doc.data().quotesHistory.map((t: any) => t.time));\r\n            setCustomDataTime(doc.data().customHistory.map((t: any) => t.time));\r\n          })\r\n          .catch((err: any) => {\r\n            console.log(\"An error has occured:\", err.message);\r\n          });\r\n      } else {\r\n        notLoggedIn.style.display = \"block\";\r\n        spinner.style.display = \"none\";\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Firebase.auth().onAuthStateChanged((usr) => {\r\n      if (usr && userData) {\r\n        if (userData.points >= 1200 && userData.points < 2200) {\r\n          db.collection(\"users\").doc(userData.id).update({\r\n            rank: \"Intermediate\",\r\n          });\r\n        } else if (userData.points >= 2200) {\r\n          db.collection(\"users\").doc(userData.id).update({\r\n            rank: \"Advanced\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }, [userData]);\r\n\r\n  return (\r\n    <>\r\n      <HTML title=\"JustType - Your profile\" />\r\n\r\n      {userData ? (\r\n        <div className=\"profileWrapper\">\r\n          <Nav path=\"/play\" name=\"Main\" />\r\n\r\n          <div className=\"grid\">\r\n            <div className=\"first-section\">\r\n              <img\r\n                src={\r\n                  user\r\n                    ? user?.photoURL\r\n                    : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n              <div className=\"userInfo\">\r\n                <h1>\r\n                  <span className=\"usern\">{user.displayName}</span>\r\n                  {userData.pro ? <img src={Pro} alt=\"\" /> : \"\"}\r\n                  <span className=\"jtId\">{userData.justTypeID}</span>\r\n                </h1>\r\n                <Linkify>\r\n                  <div className=\"descriptionProfile\">\r\n                    {userData.description}\r\n                  </div>\r\n                </Linkify>   \r\n                \r\n                <p className=\"pointsProfile\">\r\n                  {userData.points} Points ({userData.rank})\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"second-section\">\r\n              <h1>Account info</h1>\r\n              <p>\r\n                Points: <span>{userData.points}</span>\r\n              </p>\r\n              <p>\r\n                Keyboard Layout: <span>{userData.keyboardLayout}</span>\r\n              </p>\r\n              <p>\r\n                Best: <span>{userData.bestWPM} WPM</span>\r\n              </p>\r\n              <p>\r\n                Last test: <span>{userData.lastWPM} WPM</span>\r\n              </p>\r\n              <p>\r\n                Tests: <span>{userData.races}</span>\r\n              </p>\r\n              <p>\r\n                Tests on random category: <span>{userData.randomTests}</span>\r\n              </p>\r\n              <p>\r\n                Tests on quotes category: <span>{userData.quotesTests}</span>\r\n              </p>\r\n              <p>\r\n                Tests on custom category: <span>{userData.customTests}</span>\r\n              </p>\r\n              <p className=\"profileNote\">\r\n                Change your account settings{\" \"}\r\n                <Link to=\"/account-settings\">here</Link>\r\n              </p>\r\n              {userData ? (\r\n                !userData.pro ? (\r\n                  <p className=\"wantPro\">\r\n                    You are not a Pro member, do you want to be one?{\" \"}\r\n                    <Link to=\"/pro\">Buy Pro</Link>\r\n                  </p>\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              ) : (\r\n                <p>Checking...</p>\r\n              )}\r\n\r\n              <h1 className=\"moreStats\">More statistics</h1>\r\n              <p>\r\n                Average WPM on random category:{\" \"}\r\n                <span>\r\n                  {randomData.length >= 2\r\n                    ? Math.floor(\r\n                        randomData.reduce((a, b): number => Math.floor(a + b)) /\r\n                          randomData.length\r\n                      )\r\n                    : \"You have to play more\"}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                Average WPM on quotes category:{\" \"}\r\n                <span>\r\n                  {quotesData.length >= 2\r\n                    ? Math.floor(\r\n                        quotesData.reduce((a, b): number => Math.floor(a + b)) /\r\n                          quotesData.length\r\n                      )\r\n                    : \"You have to play more\"}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                Average WPM on custom category:{\" \"}\r\n                <span>\r\n                  {customData.length >= 2\r\n                    ? Math.floor(\r\n                        customData.reduce((a, b): number => Math.floor(a + b)) /\r\n                          customData.length\r\n                      )\r\n                    : \"You have to play more\"}\r\n                </span>\r\n              </p>\r\n\r\n              {randomData.length >= 2 && quotesData.length >= 2 ? (\r\n                <>\r\n                  <Statistics\r\n                    labels={randomDataTime}\r\n                    wpm={randomData}\r\n                    title=\"WPM on Random Category\"\r\n                    lineColor=\"#5c17c4\"\r\n                    pointColor=\"#20e6b4\"\r\n                  />\r\n\r\n                  <Statistics\r\n                    labels={quotesDataTime}\r\n                    wpm={quotesData}\r\n                    title=\"WPM on Quotes Category\"\r\n                    lineColor=\"#226be0\"\r\n                    pointColor=\"#d91ccc\"\r\n                  />\r\n\r\n                  {customData.length >= 2 ? (\r\n                    <Statistics\r\n                      labels={customDataTime}\r\n                      wpm={customData}\r\n                      title=\"WPM on Custom Category\"\r\n                      lineColor=\"#5ce820\"\r\n                      pointColor=\"#e82077\"\r\n                    />\r\n                  ) : (\r\n                    <p style={{ marginTop: \"30px\" }}>\r\n                      You didn't play enough in the \"custom\" category to display\r\n                      the statistics.\r\n                    </p>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <p className=\"restriction\">\r\n                  You have to take 2 tests in \"random\" and \"quotes\" category to\r\n                  unlock the statistics.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <NotLogged />\r\n      )}\r\n      <div className=\"loadingSpinnerProfile\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBPuJnN5gI3o_YZeVNlZwOky-7Y6LDGrTI\",\r\n  authDomain: \"justtype-preview.firebaseapp.com\",\r\n  projectId: \"justtype-preview\",\r\n  storageBucket: \"justtype-preview.appspot.com\",\r\n  messagingSenderId: \"648878251377\",\r\n  appId: \"1:648878251377:web:e42775dc14919b1475ead0\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\n\r\nexport default fire;\r\n","import Helmet from \"react-helmet\";\r\n\r\nfunction Html(props: any) {\r\n  return (\r\n    <Helmet>\r\n      <title>{props.title}</title>\r\n      <style>\r\n        {`\r\n                 body {\r\n                    background-color: #0b101b;       \r\n                  }\r\n                `}\r\n      </style>\r\n    </Helmet>\r\n  );\r\n}\r\n\r\nexport default Html;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Firebase, { db } from \"../services/Firebase\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport UserContext from \"../services/UserContext\";\r\n\r\nfunction LoggedNav(props: any) {\r\n  // states\r\n  const [notifications, setNotifications] = useState<any>(\"\");\r\n\r\n  const userStatus = useContext(UserContext);\r\n  const { user, setUser } = userStatus;\r\n\r\n  // ui stuff & checking if the user is logged in\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    Firebase.auth().onAuthStateChanged((usr: any) => {\r\n      if (usr) {\r\n        if (isMounted) {\r\n          setUser(usr);\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // fixing a bug\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .onSnapshot(\r\n          {\r\n            includeMetadataChanges: true,\r\n          },\r\n          (doc: any) => {\r\n            if (isMounted) {\r\n              setNotifications(doc.data().notifications);\r\n            }\r\n          }\r\n        );\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [user]);\r\n\r\n  const history = useHistory();\r\n\r\n  let mobileStatus = false;\r\n\r\n  const handleMobile = () => {\r\n    mobileStatus = !mobileStatus;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    if (mobileStatus) {\r\n      mobileNav.style.display = \"block\";\r\n      effect.style.opacity = \"0.5\";\r\n      effect.style.zIndex = \"999\";\r\n    } else {\r\n      mobileNav.style.display = \"none\";\r\n      effect.style.opacity = \"0\";\r\n      effect.style.zIndex = \"-2\";\r\n    }\r\n  };\r\n\r\n  const handleRemoveMobile = () => {\r\n    mobileStatus = false;\r\n\r\n    let mobileNav = document.querySelector(\r\n      \".mobileNavLogged\"\r\n    ) as HTMLDivElement;\r\n    let effect = document.querySelector(\".effectLogged\") as HTMLDivElement;\r\n\r\n    mobileNav.style.display = \"none\";\r\n    effect.style.opacity = \"0\";\r\n    effect.style.zIndex = \"-2\";\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    Firebase.auth().signOut();\r\n    history.push(\"/sign-in\");\r\n  };\r\n\r\n  let notStatus = false;\r\n\r\n  const handleNotifications = () => {\r\n    notStatus = !notStatus;\r\n    let wrapper = document.querySelector(\r\n      \".notificationsWrapper\"\r\n    ) as HTMLDivElement;\r\n\r\n    if (notStatus) {\r\n      wrapper.style.zIndex = \"900\";\r\n      wrapper.style.opacity = \"1\";\r\n    } else {\r\n      wrapper.style.zIndex = \"-100\";\r\n      wrapper.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"effectLogged\" onClick={handleRemoveMobile}></div>\r\n\r\n      <div className=\"navbarLogged\">\r\n        <h1 className=\"logoNavLogged\">\r\n          <HashLink to=\"/\">\r\n            JustTyp<span></span>\r\n          </HashLink>\r\n        </h1>\r\n\r\n        <div className=\"navContent\">\r\n          <ul>\r\n            <Link to={props.path}>\r\n              <li>{props.name}</li>\r\n            </Link>\r\n          </ul>\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n\r\n          <div className=\"notifications\">\r\n            <div className=\"notificationBox\" onClick={handleNotifications}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"44\"\r\n                height=\"44\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"#6f32be\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6\" />\r\n                <path d=\"M9 17v1a3 3 0 0 0 6 0v-1\" />\r\n              </svg>\r\n            </div>\r\n\r\n            <div className=\"notificationsWrapper\">\r\n              <h1>Notifications</h1>\r\n              {notifications ? (\r\n                notifications.map((x: any) => {\r\n                  return (\r\n                    <div className=\"notification\" key={x.id}>\r\n                      <p className=\"sender\">\r\n                        <span>from</span> {x.sender}\r\n                      </p>\r\n                      <p className=\"notificationMessage\">\r\n                        {x.message} <span> - {x.time}</span>\r\n                      </p>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"notificationSpinner\"></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"navButtonLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n\r\n          <div className=\"hamburgerLogged\" onClick={handleMobile}>\r\n            <div className=\"lineLogged  line1\"> </div>\r\n            <div className=\"lineLogged line2\"> </div>\r\n            <div className=\"lineLogged  line3\"> </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mobileNavLogged\">\r\n        <h1 className=\"logoNavMobileLogged\">\r\n          <HashLink to=\"/\">\r\n            JustTyp<span></span>\r\n          </HashLink>\r\n        </h1>\r\n\r\n        <div className=\"navContentMobile\">\r\n          <ul>\r\n            {props.play ? (\r\n              <a href={props.path}>{props.name}</a>\r\n            ) : (\r\n              <Link to={props.path}>\r\n                <li>{props.name}</li>\r\n              </Link>\r\n            )}\r\n          </ul>\r\n\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={\r\n                user\r\n                  ? user.photoURL\r\n                  : \"https://firebasestorage.googleapis.com/v0/b/justtype-preview.appspot.com/o/profileimage.jpg?alt=media&token=ff56cecc-ffce-42c5-8079-bcc806e70348\"\r\n              }\r\n              className=\"profileImageMobile\"\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n\r\n          <button className=\"navButtonMobileLogged\" onClick={handleSignOut}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"44\"\r\n              height=\"44\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#6f32be\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n              <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\r\n            </svg>\r\n            <p>Sign Out</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoggedNav;\r\n","import React from \"react\";\r\nimport \"../../style/css/main.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NotLogged = () => {\r\n  return (\r\n    <div className=\"notLoggedIn\">\r\n      <p>We are so sorry but you must be logged in to view this page</p>\r\n      <div className=\"buttons\">\r\n        <Link to=\"/sign-in\">\r\n          <button>Sign In</button>\r\n        </Link>\r\n        <Link to=\"/sign-up\">\r\n          <button>Sign Up</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotLogged;\r\n","export default __webpack_public_path__ + \"static/media/pro.3e24b768.jpg\";","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction Statistics(props: any) {\r\n  return (\r\n    <div className=\"graphic\">\r\n      <Line\r\n        data={{\r\n          labels: props.labels,\r\n\r\n          datasets: [\r\n            {\r\n              label: props.title,\r\n              data: props.wpm,\r\n              backgroundColor: props.pointColor,\r\n              fill: false,\r\n              lineTension: 0,\r\n              borderColor: props.lineColor,\r\n              pointBorderColor: props.pointColor,\r\n            },\r\n          ],\r\n        }}\r\n        height={400}\r\n        width={1600}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          layout: {\r\n            padding: 5,\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                gridLines: {\r\n                  color: \"#111825\",\r\n                },\r\n                ticks: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                gridLines: {\r\n                  color: \"#111825\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n"],"sourceRoot":""}